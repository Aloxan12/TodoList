// source: data_types_requests.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
var data_types_pb = require('./data_types_pb.js');
goog.object.extend(proto, data_types_pb);
var auth_requests_pb = require('./auth_requests_pb.js');
goog.object.extend(proto, auth_requests_pb);
var struct_pb = require('./struct_pb.js');
goog.object.extend(proto, struct_pb);
goog.exportSymbol('proto.auth.ActionEventSyncRequest', null, global);
goog.exportSymbol('proto.auth.ActionEventSyncResponse', null, global);
goog.exportSymbol('proto.auth.AddActionEventRequest', null, global);
goog.exportSymbol('proto.auth.AddActionRequest', null, global);
goog.exportSymbol('proto.auth.AddCityRequest', null, global);
goog.exportSymbol('proto.auth.AddCountryRequest', null, global);
goog.exportSymbol('proto.auth.AddPlan1Request', null, global);
goog.exportSymbol('proto.auth.AddPlan2Request', null, global);
goog.exportSymbol('proto.auth.AddPlan3Request', null, global);
goog.exportSymbol('proto.auth.AddVenueRequest', null, global);
goog.exportSymbol('proto.auth.AddVenueResponse', null, global);
goog.exportSymbol('proto.auth.CheckPlanRequest', null, global);
goog.exportSymbol('proto.auth.CheckPlanResponse', null, global);
goog.exportSymbol('proto.auth.DeleteActionEventRequest', null, global);
goog.exportSymbol('proto.auth.DeleteActionRequest', null, global);
goog.exportSymbol('proto.auth.DeleteCityRequest', null, global);
goog.exportSymbol('proto.auth.DeleteCountryRequest', null, global);
goog.exportSymbol('proto.auth.DeleteSeatingPlanRequest', null, global);
goog.exportSymbol('proto.auth.DeleteVenueRequest', null, global);
goog.exportSymbol('proto.auth.GetActionByIdRequest', null, global);
goog.exportSymbol('proto.auth.GetActionEventFilteredRequest', null, global);
goog.exportSymbol('proto.auth.GetActionFilteredRequest', null, global);
goog.exportSymbol('proto.auth.GetCityByCountryRequest', null, global);
goog.exportSymbol('proto.auth.GetGatewayEventInfoRequest', null, global);
goog.exportSymbol('proto.auth.GetGatewayEventInfoResponse', null, global);
goog.exportSymbol('proto.auth.GetGatewayEventListRequest', null, global);
goog.exportSymbol('proto.auth.GetSeatingPlanByIdRequest', null, global);
goog.exportSymbol('proto.auth.GetSeatingPlanListRequest', null, global);
goog.exportSymbol('proto.auth.GetSyncReportRequest', null, global);
goog.exportSymbol('proto.auth.GetSyncReportResponse', null, global);
goog.exportSymbol('proto.auth.GetVenueByCityRequest', null, global);
goog.exportSymbol('proto.auth.GetVenueByIdRequest', null, global);
goog.exportSymbol('proto.auth.GetVenueFilteredRequest', null, global);
goog.exportSymbol('proto.auth.NullableImage', null, global);
goog.exportSymbol('proto.auth.NullableImage.KindCase', null, global);
goog.exportSymbol('proto.auth.SaveActionEventRequest', null, global);
goog.exportSymbol('proto.auth.SaveActionRequest', null, global);
goog.exportSymbol('proto.auth.SaveCityRequest', null, global);
goog.exportSymbol('proto.auth.SaveCountryRequest', null, global);
goog.exportSymbol('proto.auth.SavePlanRequest', null, global);
goog.exportSymbol('proto.auth.SaveVenueRequest', null, global);
goog.exportSymbol('proto.auth.SaveVenueResponse', null, global);
goog.exportSymbol('proto.auth.SetActionBookletRequest', null, global);
goog.exportSymbol('proto.auth.SetActionBookletResponse', null, global);
goog.exportSymbol('proto.auth.VenuesOrder', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.AddCountryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auth.AddCountryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.AddCountryRequest.displayName = 'proto.auth.AddCountryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.SaveCountryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auth.SaveCountryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.SaveCountryRequest.displayName = 'proto.auth.SaveCountryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.DeleteCountryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auth.DeleteCountryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.DeleteCountryRequest.displayName = 'proto.auth.DeleteCountryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.GetCityByCountryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auth.GetCityByCountryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.GetCityByCountryRequest.displayName = 'proto.auth.GetCityByCountryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.AddCityRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auth.AddCityRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.AddCityRequest.displayName = 'proto.auth.AddCityRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.SaveCityRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auth.SaveCityRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.SaveCityRequest.displayName = 'proto.auth.SaveCityRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.DeleteCityRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auth.DeleteCityRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.DeleteCityRequest.displayName = 'proto.auth.DeleteCityRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.GetVenueByCityRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auth.GetVenueByCityRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.GetVenueByCityRequest.displayName = 'proto.auth.GetVenueByCityRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.GetVenueFilteredRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auth.GetVenueFilteredRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.GetVenueFilteredRequest.displayName = 'proto.auth.GetVenueFilteredRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.GetVenueByIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auth.GetVenueByIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.GetVenueByIdRequest.displayName = 'proto.auth.GetVenueByIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.DeleteVenueRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auth.DeleteVenueRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.DeleteVenueRequest.displayName = 'proto.auth.DeleteVenueRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.AddPlan1Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.auth.AddPlan1Request.repeatedFields_, null);
};
goog.inherits(proto.auth.AddPlan1Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.AddPlan1Request.displayName = 'proto.auth.AddPlan1Request';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.AddPlan3Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.auth.AddPlan3Request.repeatedFields_, null);
};
goog.inherits(proto.auth.AddPlan3Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.AddPlan3Request.displayName = 'proto.auth.AddPlan3Request';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.CheckPlanRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auth.CheckPlanRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.CheckPlanRequest.displayName = 'proto.auth.CheckPlanRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.CheckPlanResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.auth.CheckPlanResponse.repeatedFields_, null);
};
goog.inherits(proto.auth.CheckPlanResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.CheckPlanResponse.displayName = 'proto.auth.CheckPlanResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.AddPlan2Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auth.AddPlan2Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.AddPlan2Request.displayName = 'proto.auth.AddPlan2Request';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.SavePlanRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auth.SavePlanRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.SavePlanRequest.displayName = 'proto.auth.SavePlanRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.GetActionFilteredRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auth.GetActionFilteredRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.GetActionFilteredRequest.displayName = 'proto.auth.GetActionFilteredRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.GetActionByIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auth.GetActionByIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.GetActionByIdRequest.displayName = 'proto.auth.GetActionByIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.DeleteActionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auth.DeleteActionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.DeleteActionRequest.displayName = 'proto.auth.DeleteActionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.AddActionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auth.AddActionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.AddActionRequest.displayName = 'proto.auth.AddActionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.SaveActionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auth.SaveActionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.SaveActionRequest.displayName = 'proto.auth.SaveActionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.GetActionEventFilteredRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auth.GetActionEventFilteredRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.GetActionEventFilteredRequest.displayName = 'proto.auth.GetActionEventFilteredRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.AddActionEventRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.auth.AddActionEventRequest.repeatedFields_, null);
};
goog.inherits(proto.auth.AddActionEventRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.AddActionEventRequest.displayName = 'proto.auth.AddActionEventRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.SaveActionEventRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auth.SaveActionEventRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.SaveActionEventRequest.displayName = 'proto.auth.SaveActionEventRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.DeleteActionEventRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auth.DeleteActionEventRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.DeleteActionEventRequest.displayName = 'proto.auth.DeleteActionEventRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.GetGatewayEventListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auth.GetGatewayEventListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.GetGatewayEventListRequest.displayName = 'proto.auth.GetGatewayEventListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.GetSeatingPlanByIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auth.GetSeatingPlanByIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.GetSeatingPlanByIdRequest.displayName = 'proto.auth.GetSeatingPlanByIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.GetSeatingPlanListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auth.GetSeatingPlanListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.GetSeatingPlanListRequest.displayName = 'proto.auth.GetSeatingPlanListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.DeleteSeatingPlanRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auth.DeleteSeatingPlanRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.DeleteSeatingPlanRequest.displayName = 'proto.auth.DeleteSeatingPlanRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.AddVenueRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auth.AddVenueRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.AddVenueRequest.displayName = 'proto.auth.AddVenueRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.AddVenueResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auth.AddVenueResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.AddVenueResponse.displayName = 'proto.auth.AddVenueResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.NullableImage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.auth.NullableImage.oneofGroups_);
};
goog.inherits(proto.auth.NullableImage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.NullableImage.displayName = 'proto.auth.NullableImage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.SaveVenueRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auth.SaveVenueRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.SaveVenueRequest.displayName = 'proto.auth.SaveVenueRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.SaveVenueResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auth.SaveVenueResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.SaveVenueResponse.displayName = 'proto.auth.SaveVenueResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.ActionEventSyncRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auth.ActionEventSyncRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.ActionEventSyncRequest.displayName = 'proto.auth.ActionEventSyncRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.ActionEventSyncResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auth.ActionEventSyncResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.ActionEventSyncResponse.displayName = 'proto.auth.ActionEventSyncResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.GetSyncReportRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auth.GetSyncReportRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.GetSyncReportRequest.displayName = 'proto.auth.GetSyncReportRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.GetSyncReportResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auth.GetSyncReportResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.GetSyncReportResponse.displayName = 'proto.auth.GetSyncReportResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.GetGatewayEventInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auth.GetGatewayEventInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.GetGatewayEventInfoRequest.displayName = 'proto.auth.GetGatewayEventInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.GetGatewayEventInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auth.GetGatewayEventInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.GetGatewayEventInfoResponse.displayName = 'proto.auth.GetGatewayEventInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.SetActionBookletRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auth.SetActionBookletRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.SetActionBookletRequest.displayName = 'proto.auth.SetActionBookletRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.auth.SetActionBookletResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.auth.SetActionBookletResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.auth.SetActionBookletResponse.displayName = 'proto.auth.SetActionBookletResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.AddCountryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.AddCountryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.AddCountryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.AddCountryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorizedrequest: (f = msg.getAuthorizedrequest()) && auth_requests_pb.AuthorizedRequest.toObject(includeInstance, f),
    countryname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    currencycode: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.AddCountryRequest}
 */
proto.auth.AddCountryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.AddCountryRequest;
  return proto.auth.AddCountryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.AddCountryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.AddCountryRequest}
 */
proto.auth.AddCountryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new auth_requests_pb.AuthorizedRequest;
      reader.readMessage(value,auth_requests_pb.AuthorizedRequest.deserializeBinaryFromReader);
      msg.setAuthorizedrequest(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencycode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.AddCountryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.AddCountryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.AddCountryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.AddCountryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorizedrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      auth_requests_pb.AuthorizedRequest.serializeBinaryToWriter
    );
  }
  f = message.getCountryname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCurrencycode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional AuthorizedRequest authorizedRequest = 1;
 * @return {?proto.auth.AuthorizedRequest}
 */
proto.auth.AddCountryRequest.prototype.getAuthorizedrequest = function() {
  return /** @type{?proto.auth.AuthorizedRequest} */ (
    jspb.Message.getWrapperField(this, auth_requests_pb.AuthorizedRequest, 1));
};


/**
 * @param {?proto.auth.AuthorizedRequest|undefined} value
 * @return {!proto.auth.AddCountryRequest} returns this
*/
proto.auth.AddCountryRequest.prototype.setAuthorizedrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.AddCountryRequest} returns this
 */
proto.auth.AddCountryRequest.prototype.clearAuthorizedrequest = function() {
  return this.setAuthorizedrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.AddCountryRequest.prototype.hasAuthorizedrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string countryName = 2;
 * @return {string}
 */
proto.auth.AddCountryRequest.prototype.getCountryname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.auth.AddCountryRequest} returns this
 */
proto.auth.AddCountryRequest.prototype.setCountryname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string currencyCode = 3;
 * @return {string}
 */
proto.auth.AddCountryRequest.prototype.getCurrencycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.auth.AddCountryRequest} returns this
 */
proto.auth.AddCountryRequest.prototype.setCurrencycode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.SaveCountryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.SaveCountryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.SaveCountryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.SaveCountryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorizedrequest: (f = msg.getAuthorizedrequest()) && auth_requests_pb.AuthorizedRequest.toObject(includeInstance, f),
    country: (f = msg.getCountry()) && data_types_pb.Country.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.SaveCountryRequest}
 */
proto.auth.SaveCountryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.SaveCountryRequest;
  return proto.auth.SaveCountryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.SaveCountryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.SaveCountryRequest}
 */
proto.auth.SaveCountryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new auth_requests_pb.AuthorizedRequest;
      reader.readMessage(value,auth_requests_pb.AuthorizedRequest.deserializeBinaryFromReader);
      msg.setAuthorizedrequest(value);
      break;
    case 2:
      var value = new data_types_pb.Country;
      reader.readMessage(value,data_types_pb.Country.deserializeBinaryFromReader);
      msg.setCountry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.SaveCountryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.SaveCountryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.SaveCountryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.SaveCountryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorizedrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      auth_requests_pb.AuthorizedRequest.serializeBinaryToWriter
    );
  }
  f = message.getCountry();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      data_types_pb.Country.serializeBinaryToWriter
    );
  }
};


/**
 * optional AuthorizedRequest authorizedRequest = 1;
 * @return {?proto.auth.AuthorizedRequest}
 */
proto.auth.SaveCountryRequest.prototype.getAuthorizedrequest = function() {
  return /** @type{?proto.auth.AuthorizedRequest} */ (
    jspb.Message.getWrapperField(this, auth_requests_pb.AuthorizedRequest, 1));
};


/**
 * @param {?proto.auth.AuthorizedRequest|undefined} value
 * @return {!proto.auth.SaveCountryRequest} returns this
*/
proto.auth.SaveCountryRequest.prototype.setAuthorizedrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.SaveCountryRequest} returns this
 */
proto.auth.SaveCountryRequest.prototype.clearAuthorizedrequest = function() {
  return this.setAuthorizedrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.SaveCountryRequest.prototype.hasAuthorizedrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Country country = 2;
 * @return {?proto.auth.Country}
 */
proto.auth.SaveCountryRequest.prototype.getCountry = function() {
  return /** @type{?proto.auth.Country} */ (
    jspb.Message.getWrapperField(this, data_types_pb.Country, 2));
};


/**
 * @param {?proto.auth.Country|undefined} value
 * @return {!proto.auth.SaveCountryRequest} returns this
*/
proto.auth.SaveCountryRequest.prototype.setCountry = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.SaveCountryRequest} returns this
 */
proto.auth.SaveCountryRequest.prototype.clearCountry = function() {
  return this.setCountry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.SaveCountryRequest.prototype.hasCountry = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.DeleteCountryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.DeleteCountryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.DeleteCountryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.DeleteCountryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    auth: (f = msg.getAuth()) && auth_requests_pb.AuthorizedRequest.toObject(includeInstance, f),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.DeleteCountryRequest}
 */
proto.auth.DeleteCountryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.DeleteCountryRequest;
  return proto.auth.DeleteCountryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.DeleteCountryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.DeleteCountryRequest}
 */
proto.auth.DeleteCountryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new auth_requests_pb.AuthorizedRequest;
      reader.readMessage(value,auth_requests_pb.AuthorizedRequest.deserializeBinaryFromReader);
      msg.setAuth(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.DeleteCountryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.DeleteCountryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.DeleteCountryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.DeleteCountryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuth();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      auth_requests_pb.AuthorizedRequest.serializeBinaryToWriter
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional AuthorizedRequest auth = 1;
 * @return {?proto.auth.AuthorizedRequest}
 */
proto.auth.DeleteCountryRequest.prototype.getAuth = function() {
  return /** @type{?proto.auth.AuthorizedRequest} */ (
    jspb.Message.getWrapperField(this, auth_requests_pb.AuthorizedRequest, 1));
};


/**
 * @param {?proto.auth.AuthorizedRequest|undefined} value
 * @return {!proto.auth.DeleteCountryRequest} returns this
*/
proto.auth.DeleteCountryRequest.prototype.setAuth = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.DeleteCountryRequest} returns this
 */
proto.auth.DeleteCountryRequest.prototype.clearAuth = function() {
  return this.setAuth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.DeleteCountryRequest.prototype.hasAuth = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 id = 2;
 * @return {number}
 */
proto.auth.DeleteCountryRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.auth.DeleteCountryRequest} returns this
 */
proto.auth.DeleteCountryRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.GetCityByCountryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.GetCityByCountryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.GetCityByCountryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.GetCityByCountryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorizedrequest: (f = msg.getAuthorizedrequest()) && auth_requests_pb.AuthorizedRequest.toObject(includeInstance, f),
    countryid: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.GetCityByCountryRequest}
 */
proto.auth.GetCityByCountryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.GetCityByCountryRequest;
  return proto.auth.GetCityByCountryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.GetCityByCountryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.GetCityByCountryRequest}
 */
proto.auth.GetCityByCountryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new auth_requests_pb.AuthorizedRequest;
      reader.readMessage(value,auth_requests_pb.AuthorizedRequest.deserializeBinaryFromReader);
      msg.setAuthorizedrequest(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCountryid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.GetCityByCountryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.GetCityByCountryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.GetCityByCountryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.GetCityByCountryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorizedrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      auth_requests_pb.AuthorizedRequest.serializeBinaryToWriter
    );
  }
  f = message.getCountryid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional AuthorizedRequest authorizedRequest = 1;
 * @return {?proto.auth.AuthorizedRequest}
 */
proto.auth.GetCityByCountryRequest.prototype.getAuthorizedrequest = function() {
  return /** @type{?proto.auth.AuthorizedRequest} */ (
    jspb.Message.getWrapperField(this, auth_requests_pb.AuthorizedRequest, 1));
};


/**
 * @param {?proto.auth.AuthorizedRequest|undefined} value
 * @return {!proto.auth.GetCityByCountryRequest} returns this
*/
proto.auth.GetCityByCountryRequest.prototype.setAuthorizedrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.GetCityByCountryRequest} returns this
 */
proto.auth.GetCityByCountryRequest.prototype.clearAuthorizedrequest = function() {
  return this.setAuthorizedrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.GetCityByCountryRequest.prototype.hasAuthorizedrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 countryId = 2;
 * @return {number}
 */
proto.auth.GetCityByCountryRequest.prototype.getCountryid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.auth.GetCityByCountryRequest} returns this
 */
proto.auth.GetCityByCountryRequest.prototype.setCountryid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.AddCityRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.AddCityRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.AddCityRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.AddCityRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorizedrequest: (f = msg.getAuthorizedrequest()) && auth_requests_pb.AuthorizedRequest.toObject(includeInstance, f),
    countryid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    cityname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    zoneid: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.AddCityRequest}
 */
proto.auth.AddCityRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.AddCityRequest;
  return proto.auth.AddCityRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.AddCityRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.AddCityRequest}
 */
proto.auth.AddCityRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new auth_requests_pb.AuthorizedRequest;
      reader.readMessage(value,auth_requests_pb.AuthorizedRequest.deserializeBinaryFromReader);
      msg.setAuthorizedrequest(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCountryid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCityname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setZoneid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.AddCityRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.AddCityRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.AddCityRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.AddCityRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorizedrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      auth_requests_pb.AuthorizedRequest.serializeBinaryToWriter
    );
  }
  f = message.getCountryid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getCityname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getZoneid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional AuthorizedRequest authorizedRequest = 1;
 * @return {?proto.auth.AuthorizedRequest}
 */
proto.auth.AddCityRequest.prototype.getAuthorizedrequest = function() {
  return /** @type{?proto.auth.AuthorizedRequest} */ (
    jspb.Message.getWrapperField(this, auth_requests_pb.AuthorizedRequest, 1));
};


/**
 * @param {?proto.auth.AuthorizedRequest|undefined} value
 * @return {!proto.auth.AddCityRequest} returns this
*/
proto.auth.AddCityRequest.prototype.setAuthorizedrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.AddCityRequest} returns this
 */
proto.auth.AddCityRequest.prototype.clearAuthorizedrequest = function() {
  return this.setAuthorizedrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.AddCityRequest.prototype.hasAuthorizedrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 countryId = 2;
 * @return {number}
 */
proto.auth.AddCityRequest.prototype.getCountryid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.auth.AddCityRequest} returns this
 */
proto.auth.AddCityRequest.prototype.setCountryid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string cityName = 3;
 * @return {string}
 */
proto.auth.AddCityRequest.prototype.getCityname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.auth.AddCityRequest} returns this
 */
proto.auth.AddCityRequest.prototype.setCityname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string zoneId = 4;
 * @return {string}
 */
proto.auth.AddCityRequest.prototype.getZoneid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.auth.AddCityRequest} returns this
 */
proto.auth.AddCityRequest.prototype.setZoneid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.SaveCityRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.SaveCityRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.SaveCityRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.SaveCityRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorizedrequest: (f = msg.getAuthorizedrequest()) && auth_requests_pb.AuthorizedRequest.toObject(includeInstance, f),
    city: (f = msg.getCity()) && data_types_pb.City.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.SaveCityRequest}
 */
proto.auth.SaveCityRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.SaveCityRequest;
  return proto.auth.SaveCityRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.SaveCityRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.SaveCityRequest}
 */
proto.auth.SaveCityRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new auth_requests_pb.AuthorizedRequest;
      reader.readMessage(value,auth_requests_pb.AuthorizedRequest.deserializeBinaryFromReader);
      msg.setAuthorizedrequest(value);
      break;
    case 2:
      var value = new data_types_pb.City;
      reader.readMessage(value,data_types_pb.City.deserializeBinaryFromReader);
      msg.setCity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.SaveCityRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.SaveCityRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.SaveCityRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.SaveCityRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorizedrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      auth_requests_pb.AuthorizedRequest.serializeBinaryToWriter
    );
  }
  f = message.getCity();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      data_types_pb.City.serializeBinaryToWriter
    );
  }
};


/**
 * optional AuthorizedRequest authorizedRequest = 1;
 * @return {?proto.auth.AuthorizedRequest}
 */
proto.auth.SaveCityRequest.prototype.getAuthorizedrequest = function() {
  return /** @type{?proto.auth.AuthorizedRequest} */ (
    jspb.Message.getWrapperField(this, auth_requests_pb.AuthorizedRequest, 1));
};


/**
 * @param {?proto.auth.AuthorizedRequest|undefined} value
 * @return {!proto.auth.SaveCityRequest} returns this
*/
proto.auth.SaveCityRequest.prototype.setAuthorizedrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.SaveCityRequest} returns this
 */
proto.auth.SaveCityRequest.prototype.clearAuthorizedrequest = function() {
  return this.setAuthorizedrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.SaveCityRequest.prototype.hasAuthorizedrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional City city = 2;
 * @return {?proto.auth.City}
 */
proto.auth.SaveCityRequest.prototype.getCity = function() {
  return /** @type{?proto.auth.City} */ (
    jspb.Message.getWrapperField(this, data_types_pb.City, 2));
};


/**
 * @param {?proto.auth.City|undefined} value
 * @return {!proto.auth.SaveCityRequest} returns this
*/
proto.auth.SaveCityRequest.prototype.setCity = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.SaveCityRequest} returns this
 */
proto.auth.SaveCityRequest.prototype.clearCity = function() {
  return this.setCity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.SaveCityRequest.prototype.hasCity = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.DeleteCityRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.DeleteCityRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.DeleteCityRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.DeleteCityRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    auth: (f = msg.getAuth()) && auth_requests_pb.AuthorizedRequest.toObject(includeInstance, f),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.DeleteCityRequest}
 */
proto.auth.DeleteCityRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.DeleteCityRequest;
  return proto.auth.DeleteCityRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.DeleteCityRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.DeleteCityRequest}
 */
proto.auth.DeleteCityRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new auth_requests_pb.AuthorizedRequest;
      reader.readMessage(value,auth_requests_pb.AuthorizedRequest.deserializeBinaryFromReader);
      msg.setAuth(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.DeleteCityRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.DeleteCityRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.DeleteCityRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.DeleteCityRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuth();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      auth_requests_pb.AuthorizedRequest.serializeBinaryToWriter
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional AuthorizedRequest auth = 1;
 * @return {?proto.auth.AuthorizedRequest}
 */
proto.auth.DeleteCityRequest.prototype.getAuth = function() {
  return /** @type{?proto.auth.AuthorizedRequest} */ (
    jspb.Message.getWrapperField(this, auth_requests_pb.AuthorizedRequest, 1));
};


/**
 * @param {?proto.auth.AuthorizedRequest|undefined} value
 * @return {!proto.auth.DeleteCityRequest} returns this
*/
proto.auth.DeleteCityRequest.prototype.setAuth = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.DeleteCityRequest} returns this
 */
proto.auth.DeleteCityRequest.prototype.clearAuth = function() {
  return this.setAuth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.DeleteCityRequest.prototype.hasAuth = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 id = 2;
 * @return {number}
 */
proto.auth.DeleteCityRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.auth.DeleteCityRequest} returns this
 */
proto.auth.DeleteCityRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.GetVenueByCityRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.GetVenueByCityRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.GetVenueByCityRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.GetVenueByCityRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorizedrequest: (f = msg.getAuthorizedrequest()) && auth_requests_pb.AuthorizedRequest.toObject(includeInstance, f),
    cityid: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.GetVenueByCityRequest}
 */
proto.auth.GetVenueByCityRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.GetVenueByCityRequest;
  return proto.auth.GetVenueByCityRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.GetVenueByCityRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.GetVenueByCityRequest}
 */
proto.auth.GetVenueByCityRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new auth_requests_pb.AuthorizedRequest;
      reader.readMessage(value,auth_requests_pb.AuthorizedRequest.deserializeBinaryFromReader);
      msg.setAuthorizedrequest(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCityid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.GetVenueByCityRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.GetVenueByCityRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.GetVenueByCityRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.GetVenueByCityRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorizedrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      auth_requests_pb.AuthorizedRequest.serializeBinaryToWriter
    );
  }
  f = message.getCityid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional AuthorizedRequest authorizedRequest = 1;
 * @return {?proto.auth.AuthorizedRequest}
 */
proto.auth.GetVenueByCityRequest.prototype.getAuthorizedrequest = function() {
  return /** @type{?proto.auth.AuthorizedRequest} */ (
    jspb.Message.getWrapperField(this, auth_requests_pb.AuthorizedRequest, 1));
};


/**
 * @param {?proto.auth.AuthorizedRequest|undefined} value
 * @return {!proto.auth.GetVenueByCityRequest} returns this
*/
proto.auth.GetVenueByCityRequest.prototype.setAuthorizedrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.GetVenueByCityRequest} returns this
 */
proto.auth.GetVenueByCityRequest.prototype.clearAuthorizedrequest = function() {
  return this.setAuthorizedrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.GetVenueByCityRequest.prototype.hasAuthorizedrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 cityId = 2;
 * @return {number}
 */
proto.auth.GetVenueByCityRequest.prototype.getCityid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.auth.GetVenueByCityRequest} returns this
 */
proto.auth.GetVenueByCityRequest.prototype.setCityid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.GetVenueFilteredRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.GetVenueFilteredRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.GetVenueFilteredRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.GetVenueFilteredRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorizedrequest: (f = msg.getAuthorizedrequest()) && auth_requests_pb.AuthorizedRequest.toObject(includeInstance, f),
    cityid: (f = msg.getCityid()) && struct_pb.NullableUInt64.toObject(includeInstance, f),
    name: (f = msg.getName()) && struct_pb.NullableString.toObject(includeInstance, f),
    order: jspb.Message.getFieldWithDefault(msg, 4, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.GetVenueFilteredRequest}
 */
proto.auth.GetVenueFilteredRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.GetVenueFilteredRequest;
  return proto.auth.GetVenueFilteredRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.GetVenueFilteredRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.GetVenueFilteredRequest}
 */
proto.auth.GetVenueFilteredRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new auth_requests_pb.AuthorizedRequest;
      reader.readMessage(value,auth_requests_pb.AuthorizedRequest.deserializeBinaryFromReader);
      msg.setAuthorizedrequest(value);
      break;
    case 2:
      var value = new struct_pb.NullableUInt64;
      reader.readMessage(value,struct_pb.NullableUInt64.deserializeBinaryFromReader);
      msg.setCityid(value);
      break;
    case 3:
      var value = new struct_pb.NullableString;
      reader.readMessage(value,struct_pb.NullableString.deserializeBinaryFromReader);
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {!proto.auth.VenuesOrder} */ (reader.readEnum());
      msg.setOrder(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.GetVenueFilteredRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.GetVenueFilteredRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.GetVenueFilteredRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.GetVenueFilteredRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorizedrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      auth_requests_pb.AuthorizedRequest.serializeBinaryToWriter
    );
  }
  f = message.getCityid();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      struct_pb.NullableUInt64.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      struct_pb.NullableString.serializeBinaryToWriter
    );
  }
  f = message.getOrder();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
};


/**
 * optional AuthorizedRequest authorizedRequest = 1;
 * @return {?proto.auth.AuthorizedRequest}
 */
proto.auth.GetVenueFilteredRequest.prototype.getAuthorizedrequest = function() {
  return /** @type{?proto.auth.AuthorizedRequest} */ (
    jspb.Message.getWrapperField(this, auth_requests_pb.AuthorizedRequest, 1));
};


/**
 * @param {?proto.auth.AuthorizedRequest|undefined} value
 * @return {!proto.auth.GetVenueFilteredRequest} returns this
*/
proto.auth.GetVenueFilteredRequest.prototype.setAuthorizedrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.GetVenueFilteredRequest} returns this
 */
proto.auth.GetVenueFilteredRequest.prototype.clearAuthorizedrequest = function() {
  return this.setAuthorizedrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.GetVenueFilteredRequest.prototype.hasAuthorizedrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional NullableUInt64 cityId = 2;
 * @return {?proto.auth.NullableUInt64}
 */
proto.auth.GetVenueFilteredRequest.prototype.getCityid = function() {
  return /** @type{?proto.auth.NullableUInt64} */ (
    jspb.Message.getWrapperField(this, struct_pb.NullableUInt64, 2));
};


/**
 * @param {?proto.auth.NullableUInt64|undefined} value
 * @return {!proto.auth.GetVenueFilteredRequest} returns this
*/
proto.auth.GetVenueFilteredRequest.prototype.setCityid = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.GetVenueFilteredRequest} returns this
 */
proto.auth.GetVenueFilteredRequest.prototype.clearCityid = function() {
  return this.setCityid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.GetVenueFilteredRequest.prototype.hasCityid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional NullableString name = 3;
 * @return {?proto.auth.NullableString}
 */
proto.auth.GetVenueFilteredRequest.prototype.getName = function() {
  return /** @type{?proto.auth.NullableString} */ (
    jspb.Message.getWrapperField(this, struct_pb.NullableString, 3));
};


/**
 * @param {?proto.auth.NullableString|undefined} value
 * @return {!proto.auth.GetVenueFilteredRequest} returns this
*/
proto.auth.GetVenueFilteredRequest.prototype.setName = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.GetVenueFilteredRequest} returns this
 */
proto.auth.GetVenueFilteredRequest.prototype.clearName = function() {
  return this.setName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.GetVenueFilteredRequest.prototype.hasName = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional VenuesOrder order = 4;
 * @return {!proto.auth.VenuesOrder}
 */
proto.auth.GetVenueFilteredRequest.prototype.getOrder = function() {
  return /** @type {!proto.auth.VenuesOrder} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.auth.VenuesOrder} value
 * @return {!proto.auth.GetVenueFilteredRequest} returns this
 */
proto.auth.GetVenueFilteredRequest.prototype.setOrder = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional uint64 limit = 5;
 * @return {number}
 */
proto.auth.GetVenueFilteredRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.auth.GetVenueFilteredRequest} returns this
 */
proto.auth.GetVenueFilteredRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.GetVenueByIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.GetVenueByIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.GetVenueByIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.GetVenueByIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorizedrequest: (f = msg.getAuthorizedrequest()) && auth_requests_pb.AuthorizedRequest.toObject(includeInstance, f),
    venueid: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.GetVenueByIdRequest}
 */
proto.auth.GetVenueByIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.GetVenueByIdRequest;
  return proto.auth.GetVenueByIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.GetVenueByIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.GetVenueByIdRequest}
 */
proto.auth.GetVenueByIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new auth_requests_pb.AuthorizedRequest;
      reader.readMessage(value,auth_requests_pb.AuthorizedRequest.deserializeBinaryFromReader);
      msg.setAuthorizedrequest(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setVenueid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.GetVenueByIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.GetVenueByIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.GetVenueByIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.GetVenueByIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorizedrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      auth_requests_pb.AuthorizedRequest.serializeBinaryToWriter
    );
  }
  f = message.getVenueid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional AuthorizedRequest authorizedRequest = 1;
 * @return {?proto.auth.AuthorizedRequest}
 */
proto.auth.GetVenueByIdRequest.prototype.getAuthorizedrequest = function() {
  return /** @type{?proto.auth.AuthorizedRequest} */ (
    jspb.Message.getWrapperField(this, auth_requests_pb.AuthorizedRequest, 1));
};


/**
 * @param {?proto.auth.AuthorizedRequest|undefined} value
 * @return {!proto.auth.GetVenueByIdRequest} returns this
*/
proto.auth.GetVenueByIdRequest.prototype.setAuthorizedrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.GetVenueByIdRequest} returns this
 */
proto.auth.GetVenueByIdRequest.prototype.clearAuthorizedrequest = function() {
  return this.setAuthorizedrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.GetVenueByIdRequest.prototype.hasAuthorizedrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 venueId = 2;
 * @return {number}
 */
proto.auth.GetVenueByIdRequest.prototype.getVenueid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.auth.GetVenueByIdRequest} returns this
 */
proto.auth.GetVenueByIdRequest.prototype.setVenueid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.DeleteVenueRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.DeleteVenueRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.DeleteVenueRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.DeleteVenueRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    auth: (f = msg.getAuth()) && auth_requests_pb.AuthorizedRequest.toObject(includeInstance, f),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.DeleteVenueRequest}
 */
proto.auth.DeleteVenueRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.DeleteVenueRequest;
  return proto.auth.DeleteVenueRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.DeleteVenueRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.DeleteVenueRequest}
 */
proto.auth.DeleteVenueRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new auth_requests_pb.AuthorizedRequest;
      reader.readMessage(value,auth_requests_pb.AuthorizedRequest.deserializeBinaryFromReader);
      msg.setAuth(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.DeleteVenueRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.DeleteVenueRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.DeleteVenueRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.DeleteVenueRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuth();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      auth_requests_pb.AuthorizedRequest.serializeBinaryToWriter
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional AuthorizedRequest auth = 1;
 * @return {?proto.auth.AuthorizedRequest}
 */
proto.auth.DeleteVenueRequest.prototype.getAuth = function() {
  return /** @type{?proto.auth.AuthorizedRequest} */ (
    jspb.Message.getWrapperField(this, auth_requests_pb.AuthorizedRequest, 1));
};


/**
 * @param {?proto.auth.AuthorizedRequest|undefined} value
 * @return {!proto.auth.DeleteVenueRequest} returns this
*/
proto.auth.DeleteVenueRequest.prototype.setAuth = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.DeleteVenueRequest} returns this
 */
proto.auth.DeleteVenueRequest.prototype.clearAuth = function() {
  return this.setAuth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.DeleteVenueRequest.prototype.hasAuth = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 id = 2;
 * @return {number}
 */
proto.auth.DeleteVenueRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.auth.DeleteVenueRequest} returns this
 */
proto.auth.DeleteVenueRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.auth.AddPlan1Request.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.AddPlan1Request.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.AddPlan1Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.AddPlan1Request} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.AddPlan1Request.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorizedrequest: (f = msg.getAuthorizedrequest()) && auth_requests_pb.AuthorizedRequest.toObject(includeInstance, f),
    venueid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    planname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    categoriesList: jspb.Message.toObjectList(msg.getCategoriesList(),
    data_types_pb.Category.toObject, includeInstance),
    categorylimitsList: jspb.Message.toObjectList(msg.getCategorylimitsList(),
    data_types_pb.CategoryLimit.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.AddPlan1Request}
 */
proto.auth.AddPlan1Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.AddPlan1Request;
  return proto.auth.AddPlan1Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.AddPlan1Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.AddPlan1Request}
 */
proto.auth.AddPlan1Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new auth_requests_pb.AuthorizedRequest;
      reader.readMessage(value,auth_requests_pb.AuthorizedRequest.deserializeBinaryFromReader);
      msg.setAuthorizedrequest(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setVenueid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlanname(value);
      break;
    case 4:
      var value = new data_types_pb.Category;
      reader.readMessage(value,data_types_pb.Category.deserializeBinaryFromReader);
      msg.addCategories(value);
      break;
    case 5:
      var value = new data_types_pb.CategoryLimit;
      reader.readMessage(value,data_types_pb.CategoryLimit.deserializeBinaryFromReader);
      msg.addCategorylimits(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.AddPlan1Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.AddPlan1Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.AddPlan1Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.AddPlan1Request.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorizedrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      auth_requests_pb.AuthorizedRequest.serializeBinaryToWriter
    );
  }
  f = message.getVenueid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getPlanname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCategoriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      data_types_pb.Category.serializeBinaryToWriter
    );
  }
  f = message.getCategorylimitsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      data_types_pb.CategoryLimit.serializeBinaryToWriter
    );
  }
};


/**
 * optional AuthorizedRequest authorizedRequest = 1;
 * @return {?proto.auth.AuthorizedRequest}
 */
proto.auth.AddPlan1Request.prototype.getAuthorizedrequest = function() {
  return /** @type{?proto.auth.AuthorizedRequest} */ (
    jspb.Message.getWrapperField(this, auth_requests_pb.AuthorizedRequest, 1));
};


/**
 * @param {?proto.auth.AuthorizedRequest|undefined} value
 * @return {!proto.auth.AddPlan1Request} returns this
*/
proto.auth.AddPlan1Request.prototype.setAuthorizedrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.AddPlan1Request} returns this
 */
proto.auth.AddPlan1Request.prototype.clearAuthorizedrequest = function() {
  return this.setAuthorizedrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.AddPlan1Request.prototype.hasAuthorizedrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 venueId = 2;
 * @return {number}
 */
proto.auth.AddPlan1Request.prototype.getVenueid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.auth.AddPlan1Request} returns this
 */
proto.auth.AddPlan1Request.prototype.setVenueid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string planName = 3;
 * @return {string}
 */
proto.auth.AddPlan1Request.prototype.getPlanname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.auth.AddPlan1Request} returns this
 */
proto.auth.AddPlan1Request.prototype.setPlanname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated Category categories = 4;
 * @return {!Array<!proto.auth.Category>}
 */
proto.auth.AddPlan1Request.prototype.getCategoriesList = function() {
  return /** @type{!Array<!proto.auth.Category>} */ (
    jspb.Message.getRepeatedWrapperField(this, data_types_pb.Category, 4));
};


/**
 * @param {!Array<!proto.auth.Category>} value
 * @return {!proto.auth.AddPlan1Request} returns this
*/
proto.auth.AddPlan1Request.prototype.setCategoriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.auth.Category=} opt_value
 * @param {number=} opt_index
 * @return {!proto.auth.Category}
 */
proto.auth.AddPlan1Request.prototype.addCategories = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.auth.Category, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.auth.AddPlan1Request} returns this
 */
proto.auth.AddPlan1Request.prototype.clearCategoriesList = function() {
  return this.setCategoriesList([]);
};


/**
 * repeated CategoryLimit categoryLimits = 5;
 * @return {!Array<!proto.auth.CategoryLimit>}
 */
proto.auth.AddPlan1Request.prototype.getCategorylimitsList = function() {
  return /** @type{!Array<!proto.auth.CategoryLimit>} */ (
    jspb.Message.getRepeatedWrapperField(this, data_types_pb.CategoryLimit, 5));
};


/**
 * @param {!Array<!proto.auth.CategoryLimit>} value
 * @return {!proto.auth.AddPlan1Request} returns this
*/
proto.auth.AddPlan1Request.prototype.setCategorylimitsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.auth.CategoryLimit=} opt_value
 * @param {number=} opt_index
 * @return {!proto.auth.CategoryLimit}
 */
proto.auth.AddPlan1Request.prototype.addCategorylimits = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.auth.CategoryLimit, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.auth.AddPlan1Request} returns this
 */
proto.auth.AddPlan1Request.prototype.clearCategorylimitsList = function() {
  return this.setCategorylimitsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.auth.AddPlan3Request.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.AddPlan3Request.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.AddPlan3Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.AddPlan3Request} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.AddPlan3Request.toObject = function(includeInstance, msg) {
  var f, obj = {
    auth: (f = msg.getAuth()) && auth_requests_pb.AuthorizedRequest.toObject(includeInstance, f),
    venueid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    planname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    categoriesList: jspb.Message.toObjectList(msg.getCategoriesList(),
    data_types_pb.Category.toObject, includeInstance),
    categorylimitsList: jspb.Message.toObjectList(msg.getCategorylimitsList(),
    data_types_pb.CategoryLimit.toObject, includeInstance),
    svgfiledata: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.AddPlan3Request}
 */
proto.auth.AddPlan3Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.AddPlan3Request;
  return proto.auth.AddPlan3Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.AddPlan3Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.AddPlan3Request}
 */
proto.auth.AddPlan3Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new auth_requests_pb.AuthorizedRequest;
      reader.readMessage(value,auth_requests_pb.AuthorizedRequest.deserializeBinaryFromReader);
      msg.setAuth(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setVenueid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlanname(value);
      break;
    case 4:
      var value = new data_types_pb.Category;
      reader.readMessage(value,data_types_pb.Category.deserializeBinaryFromReader);
      msg.addCategories(value);
      break;
    case 5:
      var value = new data_types_pb.CategoryLimit;
      reader.readMessage(value,data_types_pb.CategoryLimit.deserializeBinaryFromReader);
      msg.addCategorylimits(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSvgfiledata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.AddPlan3Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.AddPlan3Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.AddPlan3Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.AddPlan3Request.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuth();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      auth_requests_pb.AuthorizedRequest.serializeBinaryToWriter
    );
  }
  f = message.getVenueid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getPlanname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCategoriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      data_types_pb.Category.serializeBinaryToWriter
    );
  }
  f = message.getCategorylimitsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      data_types_pb.CategoryLimit.serializeBinaryToWriter
    );
  }
  f = message.getSvgfiledata();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional AuthorizedRequest auth = 1;
 * @return {?proto.auth.AuthorizedRequest}
 */
proto.auth.AddPlan3Request.prototype.getAuth = function() {
  return /** @type{?proto.auth.AuthorizedRequest} */ (
    jspb.Message.getWrapperField(this, auth_requests_pb.AuthorizedRequest, 1));
};


/**
 * @param {?proto.auth.AuthorizedRequest|undefined} value
 * @return {!proto.auth.AddPlan3Request} returns this
*/
proto.auth.AddPlan3Request.prototype.setAuth = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.AddPlan3Request} returns this
 */
proto.auth.AddPlan3Request.prototype.clearAuth = function() {
  return this.setAuth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.AddPlan3Request.prototype.hasAuth = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 venueId = 2;
 * @return {number}
 */
proto.auth.AddPlan3Request.prototype.getVenueid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.auth.AddPlan3Request} returns this
 */
proto.auth.AddPlan3Request.prototype.setVenueid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string planName = 3;
 * @return {string}
 */
proto.auth.AddPlan3Request.prototype.getPlanname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.auth.AddPlan3Request} returns this
 */
proto.auth.AddPlan3Request.prototype.setPlanname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated Category categories = 4;
 * @return {!Array<!proto.auth.Category>}
 */
proto.auth.AddPlan3Request.prototype.getCategoriesList = function() {
  return /** @type{!Array<!proto.auth.Category>} */ (
    jspb.Message.getRepeatedWrapperField(this, data_types_pb.Category, 4));
};


/**
 * @param {!Array<!proto.auth.Category>} value
 * @return {!proto.auth.AddPlan3Request} returns this
*/
proto.auth.AddPlan3Request.prototype.setCategoriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.auth.Category=} opt_value
 * @param {number=} opt_index
 * @return {!proto.auth.Category}
 */
proto.auth.AddPlan3Request.prototype.addCategories = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.auth.Category, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.auth.AddPlan3Request} returns this
 */
proto.auth.AddPlan3Request.prototype.clearCategoriesList = function() {
  return this.setCategoriesList([]);
};


/**
 * repeated CategoryLimit categoryLimits = 5;
 * @return {!Array<!proto.auth.CategoryLimit>}
 */
proto.auth.AddPlan3Request.prototype.getCategorylimitsList = function() {
  return /** @type{!Array<!proto.auth.CategoryLimit>} */ (
    jspb.Message.getRepeatedWrapperField(this, data_types_pb.CategoryLimit, 5));
};


/**
 * @param {!Array<!proto.auth.CategoryLimit>} value
 * @return {!proto.auth.AddPlan3Request} returns this
*/
proto.auth.AddPlan3Request.prototype.setCategorylimitsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.auth.CategoryLimit=} opt_value
 * @param {number=} opt_index
 * @return {!proto.auth.CategoryLimit}
 */
proto.auth.AddPlan3Request.prototype.addCategorylimits = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.auth.CategoryLimit, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.auth.AddPlan3Request} returns this
 */
proto.auth.AddPlan3Request.prototype.clearCategorylimitsList = function() {
  return this.setCategorylimitsList([]);
};


/**
 * optional string svgFileData = 6;
 * @return {string}
 */
proto.auth.AddPlan3Request.prototype.getSvgfiledata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.auth.AddPlan3Request} returns this
 */
proto.auth.AddPlan3Request.prototype.setSvgfiledata = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.CheckPlanRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.CheckPlanRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.CheckPlanRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.CheckPlanRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorizedrequest: (f = msg.getAuthorizedrequest()) && auth_requests_pb.AuthorizedRequest.toObject(includeInstance, f),
    svgfiledata: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.CheckPlanRequest}
 */
proto.auth.CheckPlanRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.CheckPlanRequest;
  return proto.auth.CheckPlanRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.CheckPlanRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.CheckPlanRequest}
 */
proto.auth.CheckPlanRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new auth_requests_pb.AuthorizedRequest;
      reader.readMessage(value,auth_requests_pb.AuthorizedRequest.deserializeBinaryFromReader);
      msg.setAuthorizedrequest(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSvgfiledata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.CheckPlanRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.CheckPlanRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.CheckPlanRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.CheckPlanRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorizedrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      auth_requests_pb.AuthorizedRequest.serializeBinaryToWriter
    );
  }
  f = message.getSvgfiledata();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional AuthorizedRequest authorizedRequest = 1;
 * @return {?proto.auth.AuthorizedRequest}
 */
proto.auth.CheckPlanRequest.prototype.getAuthorizedrequest = function() {
  return /** @type{?proto.auth.AuthorizedRequest} */ (
    jspb.Message.getWrapperField(this, auth_requests_pb.AuthorizedRequest, 1));
};


/**
 * @param {?proto.auth.AuthorizedRequest|undefined} value
 * @return {!proto.auth.CheckPlanRequest} returns this
*/
proto.auth.CheckPlanRequest.prototype.setAuthorizedrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.CheckPlanRequest} returns this
 */
proto.auth.CheckPlanRequest.prototype.clearAuthorizedrequest = function() {
  return this.setAuthorizedrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.CheckPlanRequest.prototype.hasAuthorizedrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string svgFileData = 2;
 * @return {string}
 */
proto.auth.CheckPlanRequest.prototype.getSvgfiledata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.auth.CheckPlanRequest} returns this
 */
proto.auth.CheckPlanRequest.prototype.setSvgfiledata = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.auth.CheckPlanResponse.repeatedFields_ = [3,4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.CheckPlanResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.CheckPlanResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.CheckPlanResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.CheckPlanResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    responsetextdata: jspb.Message.getFieldWithDefault(msg, 1, ""),
    optimizedsvgdata: jspb.Message.getFieldWithDefault(msg, 2, ""),
    seatdatalistList: jspb.Message.toObjectList(msg.getSeatdatalistList(),
    data_types_pb.SeatData.toObject, includeInstance),
    categoriesList: jspb.Message.toObjectList(msg.getCategoriesList(),
    data_types_pb.Category.toObject, includeInstance),
    notrecognizedseatsList: jspb.Message.toObjectList(msg.getNotrecognizedseatsList(),
    data_types_pb.SeatData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.CheckPlanResponse}
 */
proto.auth.CheckPlanResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.CheckPlanResponse;
  return proto.auth.CheckPlanResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.CheckPlanResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.CheckPlanResponse}
 */
proto.auth.CheckPlanResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResponsetextdata(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOptimizedsvgdata(value);
      break;
    case 3:
      var value = new data_types_pb.SeatData;
      reader.readMessage(value,data_types_pb.SeatData.deserializeBinaryFromReader);
      msg.addSeatdatalist(value);
      break;
    case 4:
      var value = new data_types_pb.Category;
      reader.readMessage(value,data_types_pb.Category.deserializeBinaryFromReader);
      msg.addCategories(value);
      break;
    case 5:
      var value = new data_types_pb.SeatData;
      reader.readMessage(value,data_types_pb.SeatData.deserializeBinaryFromReader);
      msg.addNotrecognizedseats(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.CheckPlanResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.CheckPlanResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.CheckPlanResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.CheckPlanResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponsetextdata();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOptimizedsvgdata();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSeatdatalistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      data_types_pb.SeatData.serializeBinaryToWriter
    );
  }
  f = message.getCategoriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      data_types_pb.Category.serializeBinaryToWriter
    );
  }
  f = message.getNotrecognizedseatsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      data_types_pb.SeatData.serializeBinaryToWriter
    );
  }
};


/**
 * optional string responseTextData = 1;
 * @return {string}
 */
proto.auth.CheckPlanResponse.prototype.getResponsetextdata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.auth.CheckPlanResponse} returns this
 */
proto.auth.CheckPlanResponse.prototype.setResponsetextdata = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string optimizedSvgData = 2;
 * @return {string}
 */
proto.auth.CheckPlanResponse.prototype.getOptimizedsvgdata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.auth.CheckPlanResponse} returns this
 */
proto.auth.CheckPlanResponse.prototype.setOptimizedsvgdata = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated SeatData seatDataList = 3;
 * @return {!Array<!proto.auth.SeatData>}
 */
proto.auth.CheckPlanResponse.prototype.getSeatdatalistList = function() {
  return /** @type{!Array<!proto.auth.SeatData>} */ (
    jspb.Message.getRepeatedWrapperField(this, data_types_pb.SeatData, 3));
};


/**
 * @param {!Array<!proto.auth.SeatData>} value
 * @return {!proto.auth.CheckPlanResponse} returns this
*/
proto.auth.CheckPlanResponse.prototype.setSeatdatalistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.auth.SeatData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.auth.SeatData}
 */
proto.auth.CheckPlanResponse.prototype.addSeatdatalist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.auth.SeatData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.auth.CheckPlanResponse} returns this
 */
proto.auth.CheckPlanResponse.prototype.clearSeatdatalistList = function() {
  return this.setSeatdatalistList([]);
};


/**
 * repeated Category categories = 4;
 * @return {!Array<!proto.auth.Category>}
 */
proto.auth.CheckPlanResponse.prototype.getCategoriesList = function() {
  return /** @type{!Array<!proto.auth.Category>} */ (
    jspb.Message.getRepeatedWrapperField(this, data_types_pb.Category, 4));
};


/**
 * @param {!Array<!proto.auth.Category>} value
 * @return {!proto.auth.CheckPlanResponse} returns this
*/
proto.auth.CheckPlanResponse.prototype.setCategoriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.auth.Category=} opt_value
 * @param {number=} opt_index
 * @return {!proto.auth.Category}
 */
proto.auth.CheckPlanResponse.prototype.addCategories = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.auth.Category, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.auth.CheckPlanResponse} returns this
 */
proto.auth.CheckPlanResponse.prototype.clearCategoriesList = function() {
  return this.setCategoriesList([]);
};


/**
 * repeated SeatData notRecognizedSeats = 5;
 * @return {!Array<!proto.auth.SeatData>}
 */
proto.auth.CheckPlanResponse.prototype.getNotrecognizedseatsList = function() {
  return /** @type{!Array<!proto.auth.SeatData>} */ (
    jspb.Message.getRepeatedWrapperField(this, data_types_pb.SeatData, 5));
};


/**
 * @param {!Array<!proto.auth.SeatData>} value
 * @return {!proto.auth.CheckPlanResponse} returns this
*/
proto.auth.CheckPlanResponse.prototype.setNotrecognizedseatsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.auth.SeatData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.auth.SeatData}
 */
proto.auth.CheckPlanResponse.prototype.addNotrecognizedseats = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.auth.SeatData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.auth.CheckPlanResponse} returns this
 */
proto.auth.CheckPlanResponse.prototype.clearNotrecognizedseatsList = function() {
  return this.setNotrecognizedseatsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.AddPlan2Request.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.AddPlan2Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.AddPlan2Request} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.AddPlan2Request.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorizedrequest: (f = msg.getAuthorizedrequest()) && auth_requests_pb.AuthorizedRequest.toObject(includeInstance, f),
    venueid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    planname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    svgfiledata: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.AddPlan2Request}
 */
proto.auth.AddPlan2Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.AddPlan2Request;
  return proto.auth.AddPlan2Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.AddPlan2Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.AddPlan2Request}
 */
proto.auth.AddPlan2Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new auth_requests_pb.AuthorizedRequest;
      reader.readMessage(value,auth_requests_pb.AuthorizedRequest.deserializeBinaryFromReader);
      msg.setAuthorizedrequest(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setVenueid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlanname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSvgfiledata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.AddPlan2Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.AddPlan2Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.AddPlan2Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.AddPlan2Request.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorizedrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      auth_requests_pb.AuthorizedRequest.serializeBinaryToWriter
    );
  }
  f = message.getVenueid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getPlanname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSvgfiledata();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional AuthorizedRequest authorizedRequest = 1;
 * @return {?proto.auth.AuthorizedRequest}
 */
proto.auth.AddPlan2Request.prototype.getAuthorizedrequest = function() {
  return /** @type{?proto.auth.AuthorizedRequest} */ (
    jspb.Message.getWrapperField(this, auth_requests_pb.AuthorizedRequest, 1));
};


/**
 * @param {?proto.auth.AuthorizedRequest|undefined} value
 * @return {!proto.auth.AddPlan2Request} returns this
*/
proto.auth.AddPlan2Request.prototype.setAuthorizedrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.AddPlan2Request} returns this
 */
proto.auth.AddPlan2Request.prototype.clearAuthorizedrequest = function() {
  return this.setAuthorizedrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.AddPlan2Request.prototype.hasAuthorizedrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 venueId = 2;
 * @return {number}
 */
proto.auth.AddPlan2Request.prototype.getVenueid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.auth.AddPlan2Request} returns this
 */
proto.auth.AddPlan2Request.prototype.setVenueid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string planName = 3;
 * @return {string}
 */
proto.auth.AddPlan2Request.prototype.getPlanname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.auth.AddPlan2Request} returns this
 */
proto.auth.AddPlan2Request.prototype.setPlanname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string svgFileData = 4;
 * @return {string}
 */
proto.auth.AddPlan2Request.prototype.getSvgfiledata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.auth.AddPlan2Request} returns this
 */
proto.auth.AddPlan2Request.prototype.setSvgfiledata = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.SavePlanRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.SavePlanRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.SavePlanRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.SavePlanRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorizedrequest: (f = msg.getAuthorizedrequest()) && auth_requests_pb.AuthorizedRequest.toObject(includeInstance, f),
    seatingplan: (f = msg.getSeatingplan()) && data_types_pb.SeatingPlan.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.SavePlanRequest}
 */
proto.auth.SavePlanRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.SavePlanRequest;
  return proto.auth.SavePlanRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.SavePlanRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.SavePlanRequest}
 */
proto.auth.SavePlanRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new auth_requests_pb.AuthorizedRequest;
      reader.readMessage(value,auth_requests_pb.AuthorizedRequest.deserializeBinaryFromReader);
      msg.setAuthorizedrequest(value);
      break;
    case 2:
      var value = new data_types_pb.SeatingPlan;
      reader.readMessage(value,data_types_pb.SeatingPlan.deserializeBinaryFromReader);
      msg.setSeatingplan(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.SavePlanRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.SavePlanRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.SavePlanRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.SavePlanRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorizedrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      auth_requests_pb.AuthorizedRequest.serializeBinaryToWriter
    );
  }
  f = message.getSeatingplan();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      data_types_pb.SeatingPlan.serializeBinaryToWriter
    );
  }
};


/**
 * optional AuthorizedRequest authorizedRequest = 1;
 * @return {?proto.auth.AuthorizedRequest}
 */
proto.auth.SavePlanRequest.prototype.getAuthorizedrequest = function() {
  return /** @type{?proto.auth.AuthorizedRequest} */ (
    jspb.Message.getWrapperField(this, auth_requests_pb.AuthorizedRequest, 1));
};


/**
 * @param {?proto.auth.AuthorizedRequest|undefined} value
 * @return {!proto.auth.SavePlanRequest} returns this
*/
proto.auth.SavePlanRequest.prototype.setAuthorizedrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.SavePlanRequest} returns this
 */
proto.auth.SavePlanRequest.prototype.clearAuthorizedrequest = function() {
  return this.setAuthorizedrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.SavePlanRequest.prototype.hasAuthorizedrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional SeatingPlan seatingPlan = 2;
 * @return {?proto.auth.SeatingPlan}
 */
proto.auth.SavePlanRequest.prototype.getSeatingplan = function() {
  return /** @type{?proto.auth.SeatingPlan} */ (
    jspb.Message.getWrapperField(this, data_types_pb.SeatingPlan, 2));
};


/**
 * @param {?proto.auth.SeatingPlan|undefined} value
 * @return {!proto.auth.SavePlanRequest} returns this
*/
proto.auth.SavePlanRequest.prototype.setSeatingplan = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.SavePlanRequest} returns this
 */
proto.auth.SavePlanRequest.prototype.clearSeatingplan = function() {
  return this.setSeatingplan(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.SavePlanRequest.prototype.hasSeatingplan = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.GetActionFilteredRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.GetActionFilteredRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.GetActionFilteredRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.GetActionFilteredRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorizedrequest: (f = msg.getAuthorizedrequest()) && auth_requests_pb.AuthorizedRequest.toObject(includeInstance, f),
    actual: (f = msg.getActual()) && struct_pb.NullableBool.toObject(includeInstance, f),
    withoutactioneventdata: (f = msg.getWithoutactioneventdata()) && struct_pb.NullableBool.toObject(includeInstance, f),
    cityid: (f = msg.getCityid()) && struct_pb.NullableUInt64.toObject(includeInstance, f),
    venueid: (f = msg.getVenueid()) && struct_pb.NullableUInt64.toObject(includeInstance, f),
    name: (f = msg.getName()) && struct_pb.NullableString.toObject(includeInstance, f),
    kindid: (f = msg.getKindid()) && struct_pb.NullableString.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.GetActionFilteredRequest}
 */
proto.auth.GetActionFilteredRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.GetActionFilteredRequest;
  return proto.auth.GetActionFilteredRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.GetActionFilteredRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.GetActionFilteredRequest}
 */
proto.auth.GetActionFilteredRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new auth_requests_pb.AuthorizedRequest;
      reader.readMessage(value,auth_requests_pb.AuthorizedRequest.deserializeBinaryFromReader);
      msg.setAuthorizedrequest(value);
      break;
    case 2:
      var value = new struct_pb.NullableBool;
      reader.readMessage(value,struct_pb.NullableBool.deserializeBinaryFromReader);
      msg.setActual(value);
      break;
    case 3:
      var value = new struct_pb.NullableBool;
      reader.readMessage(value,struct_pb.NullableBool.deserializeBinaryFromReader);
      msg.setWithoutactioneventdata(value);
      break;
    case 4:
      var value = new struct_pb.NullableUInt64;
      reader.readMessage(value,struct_pb.NullableUInt64.deserializeBinaryFromReader);
      msg.setCityid(value);
      break;
    case 5:
      var value = new struct_pb.NullableUInt64;
      reader.readMessage(value,struct_pb.NullableUInt64.deserializeBinaryFromReader);
      msg.setVenueid(value);
      break;
    case 6:
      var value = new struct_pb.NullableString;
      reader.readMessage(value,struct_pb.NullableString.deserializeBinaryFromReader);
      msg.setName(value);
      break;
    case 7:
      var value = new struct_pb.NullableString;
      reader.readMessage(value,struct_pb.NullableString.deserializeBinaryFromReader);
      msg.setKindid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.GetActionFilteredRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.GetActionFilteredRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.GetActionFilteredRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.GetActionFilteredRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorizedrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      auth_requests_pb.AuthorizedRequest.serializeBinaryToWriter
    );
  }
  f = message.getActual();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      struct_pb.NullableBool.serializeBinaryToWriter
    );
  }
  f = message.getWithoutactioneventdata();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      struct_pb.NullableBool.serializeBinaryToWriter
    );
  }
  f = message.getCityid();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      struct_pb.NullableUInt64.serializeBinaryToWriter
    );
  }
  f = message.getVenueid();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      struct_pb.NullableUInt64.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      struct_pb.NullableString.serializeBinaryToWriter
    );
  }
  f = message.getKindid();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      struct_pb.NullableString.serializeBinaryToWriter
    );
  }
};


/**
 * optional AuthorizedRequest authorizedRequest = 1;
 * @return {?proto.auth.AuthorizedRequest}
 */
proto.auth.GetActionFilteredRequest.prototype.getAuthorizedrequest = function() {
  return /** @type{?proto.auth.AuthorizedRequest} */ (
    jspb.Message.getWrapperField(this, auth_requests_pb.AuthorizedRequest, 1));
};


/**
 * @param {?proto.auth.AuthorizedRequest|undefined} value
 * @return {!proto.auth.GetActionFilteredRequest} returns this
*/
proto.auth.GetActionFilteredRequest.prototype.setAuthorizedrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.GetActionFilteredRequest} returns this
 */
proto.auth.GetActionFilteredRequest.prototype.clearAuthorizedrequest = function() {
  return this.setAuthorizedrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.GetActionFilteredRequest.prototype.hasAuthorizedrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional NullableBool actual = 2;
 * @return {?proto.auth.NullableBool}
 */
proto.auth.GetActionFilteredRequest.prototype.getActual = function() {
  return /** @type{?proto.auth.NullableBool} */ (
    jspb.Message.getWrapperField(this, struct_pb.NullableBool, 2));
};


/**
 * @param {?proto.auth.NullableBool|undefined} value
 * @return {!proto.auth.GetActionFilteredRequest} returns this
*/
proto.auth.GetActionFilteredRequest.prototype.setActual = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.GetActionFilteredRequest} returns this
 */
proto.auth.GetActionFilteredRequest.prototype.clearActual = function() {
  return this.setActual(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.GetActionFilteredRequest.prototype.hasActual = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional NullableBool withoutActionEventData = 3;
 * @return {?proto.auth.NullableBool}
 */
proto.auth.GetActionFilteredRequest.prototype.getWithoutactioneventdata = function() {
  return /** @type{?proto.auth.NullableBool} */ (
    jspb.Message.getWrapperField(this, struct_pb.NullableBool, 3));
};


/**
 * @param {?proto.auth.NullableBool|undefined} value
 * @return {!proto.auth.GetActionFilteredRequest} returns this
*/
proto.auth.GetActionFilteredRequest.prototype.setWithoutactioneventdata = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.GetActionFilteredRequest} returns this
 */
proto.auth.GetActionFilteredRequest.prototype.clearWithoutactioneventdata = function() {
  return this.setWithoutactioneventdata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.GetActionFilteredRequest.prototype.hasWithoutactioneventdata = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional NullableUInt64 cityId = 4;
 * @return {?proto.auth.NullableUInt64}
 */
proto.auth.GetActionFilteredRequest.prototype.getCityid = function() {
  return /** @type{?proto.auth.NullableUInt64} */ (
    jspb.Message.getWrapperField(this, struct_pb.NullableUInt64, 4));
};


/**
 * @param {?proto.auth.NullableUInt64|undefined} value
 * @return {!proto.auth.GetActionFilteredRequest} returns this
*/
proto.auth.GetActionFilteredRequest.prototype.setCityid = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.GetActionFilteredRequest} returns this
 */
proto.auth.GetActionFilteredRequest.prototype.clearCityid = function() {
  return this.setCityid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.GetActionFilteredRequest.prototype.hasCityid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional NullableUInt64 venueId = 5;
 * @return {?proto.auth.NullableUInt64}
 */
proto.auth.GetActionFilteredRequest.prototype.getVenueid = function() {
  return /** @type{?proto.auth.NullableUInt64} */ (
    jspb.Message.getWrapperField(this, struct_pb.NullableUInt64, 5));
};


/**
 * @param {?proto.auth.NullableUInt64|undefined} value
 * @return {!proto.auth.GetActionFilteredRequest} returns this
*/
proto.auth.GetActionFilteredRequest.prototype.setVenueid = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.GetActionFilteredRequest} returns this
 */
proto.auth.GetActionFilteredRequest.prototype.clearVenueid = function() {
  return this.setVenueid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.GetActionFilteredRequest.prototype.hasVenueid = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional NullableString name = 6;
 * @return {?proto.auth.NullableString}
 */
proto.auth.GetActionFilteredRequest.prototype.getName = function() {
  return /** @type{?proto.auth.NullableString} */ (
    jspb.Message.getWrapperField(this, struct_pb.NullableString, 6));
};


/**
 * @param {?proto.auth.NullableString|undefined} value
 * @return {!proto.auth.GetActionFilteredRequest} returns this
*/
proto.auth.GetActionFilteredRequest.prototype.setName = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.GetActionFilteredRequest} returns this
 */
proto.auth.GetActionFilteredRequest.prototype.clearName = function() {
  return this.setName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.GetActionFilteredRequest.prototype.hasName = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional NullableString kindId = 7;
 * @return {?proto.auth.NullableString}
 */
proto.auth.GetActionFilteredRequest.prototype.getKindid = function() {
  return /** @type{?proto.auth.NullableString} */ (
    jspb.Message.getWrapperField(this, struct_pb.NullableString, 7));
};


/**
 * @param {?proto.auth.NullableString|undefined} value
 * @return {!proto.auth.GetActionFilteredRequest} returns this
*/
proto.auth.GetActionFilteredRequest.prototype.setKindid = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.GetActionFilteredRequest} returns this
 */
proto.auth.GetActionFilteredRequest.prototype.clearKindid = function() {
  return this.setKindid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.GetActionFilteredRequest.prototype.hasKindid = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.GetActionByIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.GetActionByIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.GetActionByIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.GetActionByIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorizedrequest: (f = msg.getAuthorizedrequest()) && auth_requests_pb.AuthorizedRequest.toObject(includeInstance, f),
    actionid: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.GetActionByIdRequest}
 */
proto.auth.GetActionByIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.GetActionByIdRequest;
  return proto.auth.GetActionByIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.GetActionByIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.GetActionByIdRequest}
 */
proto.auth.GetActionByIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new auth_requests_pb.AuthorizedRequest;
      reader.readMessage(value,auth_requests_pb.AuthorizedRequest.deserializeBinaryFromReader);
      msg.setAuthorizedrequest(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setActionid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.GetActionByIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.GetActionByIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.GetActionByIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.GetActionByIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorizedrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      auth_requests_pb.AuthorizedRequest.serializeBinaryToWriter
    );
  }
  f = message.getActionid();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
};


/**
 * optional AuthorizedRequest authorizedRequest = 1;
 * @return {?proto.auth.AuthorizedRequest}
 */
proto.auth.GetActionByIdRequest.prototype.getAuthorizedrequest = function() {
  return /** @type{?proto.auth.AuthorizedRequest} */ (
    jspb.Message.getWrapperField(this, auth_requests_pb.AuthorizedRequest, 1));
};


/**
 * @param {?proto.auth.AuthorizedRequest|undefined} value
 * @return {!proto.auth.GetActionByIdRequest} returns this
*/
proto.auth.GetActionByIdRequest.prototype.setAuthorizedrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.GetActionByIdRequest} returns this
 */
proto.auth.GetActionByIdRequest.prototype.clearAuthorizedrequest = function() {
  return this.setAuthorizedrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.GetActionByIdRequest.prototype.hasAuthorizedrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 actionId = 10;
 * @return {number}
 */
proto.auth.GetActionByIdRequest.prototype.getActionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.auth.GetActionByIdRequest} returns this
 */
proto.auth.GetActionByIdRequest.prototype.setActionid = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.DeleteActionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.DeleteActionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.DeleteActionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.DeleteActionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorizedrequest: (f = msg.getAuthorizedrequest()) && auth_requests_pb.AuthorizedRequest.toObject(includeInstance, f),
    actionid: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.DeleteActionRequest}
 */
proto.auth.DeleteActionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.DeleteActionRequest;
  return proto.auth.DeleteActionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.DeleteActionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.DeleteActionRequest}
 */
proto.auth.DeleteActionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new auth_requests_pb.AuthorizedRequest;
      reader.readMessage(value,auth_requests_pb.AuthorizedRequest.deserializeBinaryFromReader);
      msg.setAuthorizedrequest(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setActionid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.DeleteActionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.DeleteActionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.DeleteActionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.DeleteActionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorizedrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      auth_requests_pb.AuthorizedRequest.serializeBinaryToWriter
    );
  }
  f = message.getActionid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional AuthorizedRequest authorizedRequest = 1;
 * @return {?proto.auth.AuthorizedRequest}
 */
proto.auth.DeleteActionRequest.prototype.getAuthorizedrequest = function() {
  return /** @type{?proto.auth.AuthorizedRequest} */ (
    jspb.Message.getWrapperField(this, auth_requests_pb.AuthorizedRequest, 1));
};


/**
 * @param {?proto.auth.AuthorizedRequest|undefined} value
 * @return {!proto.auth.DeleteActionRequest} returns this
*/
proto.auth.DeleteActionRequest.prototype.setAuthorizedrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.DeleteActionRequest} returns this
 */
proto.auth.DeleteActionRequest.prototype.clearAuthorizedrequest = function() {
  return this.setAuthorizedrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.DeleteActionRequest.prototype.hasAuthorizedrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 actionId = 2;
 * @return {number}
 */
proto.auth.DeleteActionRequest.prototype.getActionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.auth.DeleteActionRequest} returns this
 */
proto.auth.DeleteActionRequest.prototype.setActionid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.AddActionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.AddActionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.AddActionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.AddActionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorizedrequest: (f = msg.getAuthorizedrequest()) && auth_requests_pb.AuthorizedRequest.toObject(includeInstance, f),
    companyorganizerid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    kind: (f = msg.getKind()) && data_types_pb.Kind.toObject(includeInstance, f),
    actionname: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.AddActionRequest}
 */
proto.auth.AddActionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.AddActionRequest;
  return proto.auth.AddActionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.AddActionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.AddActionRequest}
 */
proto.auth.AddActionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new auth_requests_pb.AuthorizedRequest;
      reader.readMessage(value,auth_requests_pb.AuthorizedRequest.deserializeBinaryFromReader);
      msg.setAuthorizedrequest(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCompanyorganizerid(value);
      break;
    case 3:
      var value = new data_types_pb.Kind;
      reader.readMessage(value,data_types_pb.Kind.deserializeBinaryFromReader);
      msg.setKind(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setActionname(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.AddActionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.AddActionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.AddActionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.AddActionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorizedrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      auth_requests_pb.AuthorizedRequest.serializeBinaryToWriter
    );
  }
  f = message.getCompanyorganizerid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getKind();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      data_types_pb.Kind.serializeBinaryToWriter
    );
  }
  f = message.getActionname();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional AuthorizedRequest authorizedRequest = 1;
 * @return {?proto.auth.AuthorizedRequest}
 */
proto.auth.AddActionRequest.prototype.getAuthorizedrequest = function() {
  return /** @type{?proto.auth.AuthorizedRequest} */ (
    jspb.Message.getWrapperField(this, auth_requests_pb.AuthorizedRequest, 1));
};


/**
 * @param {?proto.auth.AuthorizedRequest|undefined} value
 * @return {!proto.auth.AddActionRequest} returns this
*/
proto.auth.AddActionRequest.prototype.setAuthorizedrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.AddActionRequest} returns this
 */
proto.auth.AddActionRequest.prototype.clearAuthorizedrequest = function() {
  return this.setAuthorizedrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.AddActionRequest.prototype.hasAuthorizedrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 companyOrganizerId = 2;
 * @return {number}
 */
proto.auth.AddActionRequest.prototype.getCompanyorganizerid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.auth.AddActionRequest} returns this
 */
proto.auth.AddActionRequest.prototype.setCompanyorganizerid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Kind kind = 3;
 * @return {?proto.auth.Kind}
 */
proto.auth.AddActionRequest.prototype.getKind = function() {
  return /** @type{?proto.auth.Kind} */ (
    jspb.Message.getWrapperField(this, data_types_pb.Kind, 3));
};


/**
 * @param {?proto.auth.Kind|undefined} value
 * @return {!proto.auth.AddActionRequest} returns this
*/
proto.auth.AddActionRequest.prototype.setKind = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.AddActionRequest} returns this
 */
proto.auth.AddActionRequest.prototype.clearKind = function() {
  return this.setKind(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.AddActionRequest.prototype.hasKind = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string actionName = 4;
 * @return {string}
 */
proto.auth.AddActionRequest.prototype.getActionname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.auth.AddActionRequest} returns this
 */
proto.auth.AddActionRequest.prototype.setActionname = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.SaveActionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.SaveActionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.SaveActionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.SaveActionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorizedrequest: (f = msg.getAuthorizedrequest()) && auth_requests_pb.AuthorizedRequest.toObject(includeInstance, f),
    data: (f = msg.getData()) && data_types_pb.Action.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.SaveActionRequest}
 */
proto.auth.SaveActionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.SaveActionRequest;
  return proto.auth.SaveActionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.SaveActionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.SaveActionRequest}
 */
proto.auth.SaveActionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new auth_requests_pb.AuthorizedRequest;
      reader.readMessage(value,auth_requests_pb.AuthorizedRequest.deserializeBinaryFromReader);
      msg.setAuthorizedrequest(value);
      break;
    case 2:
      var value = new data_types_pb.Action;
      reader.readMessage(value,data_types_pb.Action.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.SaveActionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.SaveActionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.SaveActionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.SaveActionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorizedrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      auth_requests_pb.AuthorizedRequest.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      data_types_pb.Action.serializeBinaryToWriter
    );
  }
};


/**
 * optional AuthorizedRequest authorizedRequest = 1;
 * @return {?proto.auth.AuthorizedRequest}
 */
proto.auth.SaveActionRequest.prototype.getAuthorizedrequest = function() {
  return /** @type{?proto.auth.AuthorizedRequest} */ (
    jspb.Message.getWrapperField(this, auth_requests_pb.AuthorizedRequest, 1));
};


/**
 * @param {?proto.auth.AuthorizedRequest|undefined} value
 * @return {!proto.auth.SaveActionRequest} returns this
*/
proto.auth.SaveActionRequest.prototype.setAuthorizedrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.SaveActionRequest} returns this
 */
proto.auth.SaveActionRequest.prototype.clearAuthorizedrequest = function() {
  return this.setAuthorizedrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.SaveActionRequest.prototype.hasAuthorizedrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Action data = 2;
 * @return {?proto.auth.Action}
 */
proto.auth.SaveActionRequest.prototype.getData = function() {
  return /** @type{?proto.auth.Action} */ (
    jspb.Message.getWrapperField(this, data_types_pb.Action, 2));
};


/**
 * @param {?proto.auth.Action|undefined} value
 * @return {!proto.auth.SaveActionRequest} returns this
*/
proto.auth.SaveActionRequest.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.SaveActionRequest} returns this
 */
proto.auth.SaveActionRequest.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.SaveActionRequest.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.GetActionEventFilteredRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.GetActionEventFilteredRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.GetActionEventFilteredRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.GetActionEventFilteredRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorizedrequest: (f = msg.getAuthorizedrequest()) && auth_requests_pb.AuthorizedRequest.toObject(includeInstance, f),
    actionid: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.GetActionEventFilteredRequest}
 */
proto.auth.GetActionEventFilteredRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.GetActionEventFilteredRequest;
  return proto.auth.GetActionEventFilteredRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.GetActionEventFilteredRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.GetActionEventFilteredRequest}
 */
proto.auth.GetActionEventFilteredRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new auth_requests_pb.AuthorizedRequest;
      reader.readMessage(value,auth_requests_pb.AuthorizedRequest.deserializeBinaryFromReader);
      msg.setAuthorizedrequest(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setActionid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.GetActionEventFilteredRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.GetActionEventFilteredRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.GetActionEventFilteredRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.GetActionEventFilteredRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorizedrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      auth_requests_pb.AuthorizedRequest.serializeBinaryToWriter
    );
  }
  f = message.getActionid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional AuthorizedRequest authorizedRequest = 1;
 * @return {?proto.auth.AuthorizedRequest}
 */
proto.auth.GetActionEventFilteredRequest.prototype.getAuthorizedrequest = function() {
  return /** @type{?proto.auth.AuthorizedRequest} */ (
    jspb.Message.getWrapperField(this, auth_requests_pb.AuthorizedRequest, 1));
};


/**
 * @param {?proto.auth.AuthorizedRequest|undefined} value
 * @return {!proto.auth.GetActionEventFilteredRequest} returns this
*/
proto.auth.GetActionEventFilteredRequest.prototype.setAuthorizedrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.GetActionEventFilteredRequest} returns this
 */
proto.auth.GetActionEventFilteredRequest.prototype.clearAuthorizedrequest = function() {
  return this.setAuthorizedrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.GetActionEventFilteredRequest.prototype.hasAuthorizedrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 actionId = 2;
 * @return {number}
 */
proto.auth.GetActionEventFilteredRequest.prototype.getActionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.auth.GetActionEventFilteredRequest} returns this
 */
proto.auth.GetActionEventFilteredRequest.prototype.setActionid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.auth.AddActionEventRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.AddActionEventRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.AddActionEventRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.AddActionEventRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.AddActionEventRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorizedrequest: (f = msg.getAuthorizedrequest()) && auth_requests_pb.AuthorizedRequest.toObject(includeInstance, f),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    data_types_pb.ActionEvent.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.AddActionEventRequest}
 */
proto.auth.AddActionEventRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.AddActionEventRequest;
  return proto.auth.AddActionEventRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.AddActionEventRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.AddActionEventRequest}
 */
proto.auth.AddActionEventRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new auth_requests_pb.AuthorizedRequest;
      reader.readMessage(value,auth_requests_pb.AuthorizedRequest.deserializeBinaryFromReader);
      msg.setAuthorizedrequest(value);
      break;
    case 2:
      var value = new data_types_pb.ActionEvent;
      reader.readMessage(value,data_types_pb.ActionEvent.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.AddActionEventRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.AddActionEventRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.AddActionEventRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.AddActionEventRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorizedrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      auth_requests_pb.AuthorizedRequest.serializeBinaryToWriter
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      data_types_pb.ActionEvent.serializeBinaryToWriter
    );
  }
};


/**
 * optional AuthorizedRequest authorizedRequest = 1;
 * @return {?proto.auth.AuthorizedRequest}
 */
proto.auth.AddActionEventRequest.prototype.getAuthorizedrequest = function() {
  return /** @type{?proto.auth.AuthorizedRequest} */ (
    jspb.Message.getWrapperField(this, auth_requests_pb.AuthorizedRequest, 1));
};


/**
 * @param {?proto.auth.AuthorizedRequest|undefined} value
 * @return {!proto.auth.AddActionEventRequest} returns this
*/
proto.auth.AddActionEventRequest.prototype.setAuthorizedrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.AddActionEventRequest} returns this
 */
proto.auth.AddActionEventRequest.prototype.clearAuthorizedrequest = function() {
  return this.setAuthorizedrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.AddActionEventRequest.prototype.hasAuthorizedrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ActionEvent data = 2;
 * @return {!Array<!proto.auth.ActionEvent>}
 */
proto.auth.AddActionEventRequest.prototype.getDataList = function() {
  return /** @type{!Array<!proto.auth.ActionEvent>} */ (
    jspb.Message.getRepeatedWrapperField(this, data_types_pb.ActionEvent, 2));
};


/**
 * @param {!Array<!proto.auth.ActionEvent>} value
 * @return {!proto.auth.AddActionEventRequest} returns this
*/
proto.auth.AddActionEventRequest.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.auth.ActionEvent=} opt_value
 * @param {number=} opt_index
 * @return {!proto.auth.ActionEvent}
 */
proto.auth.AddActionEventRequest.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.auth.ActionEvent, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.auth.AddActionEventRequest} returns this
 */
proto.auth.AddActionEventRequest.prototype.clearDataList = function() {
  return this.setDataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.SaveActionEventRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.SaveActionEventRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.SaveActionEventRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.SaveActionEventRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorizedrequest: (f = msg.getAuthorizedrequest()) && auth_requests_pb.AuthorizedRequest.toObject(includeInstance, f),
    data: (f = msg.getData()) && data_types_pb.ActionEvent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.SaveActionEventRequest}
 */
proto.auth.SaveActionEventRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.SaveActionEventRequest;
  return proto.auth.SaveActionEventRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.SaveActionEventRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.SaveActionEventRequest}
 */
proto.auth.SaveActionEventRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new auth_requests_pb.AuthorizedRequest;
      reader.readMessage(value,auth_requests_pb.AuthorizedRequest.deserializeBinaryFromReader);
      msg.setAuthorizedrequest(value);
      break;
    case 2:
      var value = new data_types_pb.ActionEvent;
      reader.readMessage(value,data_types_pb.ActionEvent.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.SaveActionEventRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.SaveActionEventRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.SaveActionEventRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.SaveActionEventRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorizedrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      auth_requests_pb.AuthorizedRequest.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      data_types_pb.ActionEvent.serializeBinaryToWriter
    );
  }
};


/**
 * optional AuthorizedRequest authorizedRequest = 1;
 * @return {?proto.auth.AuthorizedRequest}
 */
proto.auth.SaveActionEventRequest.prototype.getAuthorizedrequest = function() {
  return /** @type{?proto.auth.AuthorizedRequest} */ (
    jspb.Message.getWrapperField(this, auth_requests_pb.AuthorizedRequest, 1));
};


/**
 * @param {?proto.auth.AuthorizedRequest|undefined} value
 * @return {!proto.auth.SaveActionEventRequest} returns this
*/
proto.auth.SaveActionEventRequest.prototype.setAuthorizedrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.SaveActionEventRequest} returns this
 */
proto.auth.SaveActionEventRequest.prototype.clearAuthorizedrequest = function() {
  return this.setAuthorizedrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.SaveActionEventRequest.prototype.hasAuthorizedrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ActionEvent data = 2;
 * @return {?proto.auth.ActionEvent}
 */
proto.auth.SaveActionEventRequest.prototype.getData = function() {
  return /** @type{?proto.auth.ActionEvent} */ (
    jspb.Message.getWrapperField(this, data_types_pb.ActionEvent, 2));
};


/**
 * @param {?proto.auth.ActionEvent|undefined} value
 * @return {!proto.auth.SaveActionEventRequest} returns this
*/
proto.auth.SaveActionEventRequest.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.SaveActionEventRequest} returns this
 */
proto.auth.SaveActionEventRequest.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.SaveActionEventRequest.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.DeleteActionEventRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.DeleteActionEventRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.DeleteActionEventRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.DeleteActionEventRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorizedrequest: (f = msg.getAuthorizedrequest()) && auth_requests_pb.AuthorizedRequest.toObject(includeInstance, f),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.DeleteActionEventRequest}
 */
proto.auth.DeleteActionEventRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.DeleteActionEventRequest;
  return proto.auth.DeleteActionEventRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.DeleteActionEventRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.DeleteActionEventRequest}
 */
proto.auth.DeleteActionEventRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new auth_requests_pb.AuthorizedRequest;
      reader.readMessage(value,auth_requests_pb.AuthorizedRequest.deserializeBinaryFromReader);
      msg.setAuthorizedrequest(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.DeleteActionEventRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.DeleteActionEventRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.DeleteActionEventRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.DeleteActionEventRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorizedrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      auth_requests_pb.AuthorizedRequest.serializeBinaryToWriter
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional AuthorizedRequest authorizedRequest = 1;
 * @return {?proto.auth.AuthorizedRequest}
 */
proto.auth.DeleteActionEventRequest.prototype.getAuthorizedrequest = function() {
  return /** @type{?proto.auth.AuthorizedRequest} */ (
    jspb.Message.getWrapperField(this, auth_requests_pb.AuthorizedRequest, 1));
};


/**
 * @param {?proto.auth.AuthorizedRequest|undefined} value
 * @return {!proto.auth.DeleteActionEventRequest} returns this
*/
proto.auth.DeleteActionEventRequest.prototype.setAuthorizedrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.DeleteActionEventRequest} returns this
 */
proto.auth.DeleteActionEventRequest.prototype.clearAuthorizedrequest = function() {
  return this.setAuthorizedrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.DeleteActionEventRequest.prototype.hasAuthorizedrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 id = 2;
 * @return {number}
 */
proto.auth.DeleteActionEventRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.auth.DeleteActionEventRequest} returns this
 */
proto.auth.DeleteActionEventRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.GetGatewayEventListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.GetGatewayEventListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.GetGatewayEventListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.GetGatewayEventListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorizedrequest: (f = msg.getAuthorizedrequest()) && auth_requests_pb.AuthorizedRequest.toObject(includeInstance, f),
    data: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.GetGatewayEventListRequest}
 */
proto.auth.GetGatewayEventListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.GetGatewayEventListRequest;
  return proto.auth.GetGatewayEventListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.GetGatewayEventListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.GetGatewayEventListRequest}
 */
proto.auth.GetGatewayEventListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new auth_requests_pb.AuthorizedRequest;
      reader.readMessage(value,auth_requests_pb.AuthorizedRequest.deserializeBinaryFromReader);
      msg.setAuthorizedrequest(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.GetGatewayEventListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.GetGatewayEventListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.GetGatewayEventListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.GetGatewayEventListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorizedrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      auth_requests_pb.AuthorizedRequest.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional AuthorizedRequest authorizedRequest = 1;
 * @return {?proto.auth.AuthorizedRequest}
 */
proto.auth.GetGatewayEventListRequest.prototype.getAuthorizedrequest = function() {
  return /** @type{?proto.auth.AuthorizedRequest} */ (
    jspb.Message.getWrapperField(this, auth_requests_pb.AuthorizedRequest, 1));
};


/**
 * @param {?proto.auth.AuthorizedRequest|undefined} value
 * @return {!proto.auth.GetGatewayEventListRequest} returns this
*/
proto.auth.GetGatewayEventListRequest.prototype.setAuthorizedrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.GetGatewayEventListRequest} returns this
 */
proto.auth.GetGatewayEventListRequest.prototype.clearAuthorizedrequest = function() {
  return this.setAuthorizedrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.GetGatewayEventListRequest.prototype.hasAuthorizedrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 data = 2;
 * @return {number}
 */
proto.auth.GetGatewayEventListRequest.prototype.getData = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.auth.GetGatewayEventListRequest} returns this
 */
proto.auth.GetGatewayEventListRequest.prototype.setData = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.GetSeatingPlanByIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.GetSeatingPlanByIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.GetSeatingPlanByIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.GetSeatingPlanByIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorizedrequest: (f = msg.getAuthorizedrequest()) && auth_requests_pb.AuthorizedRequest.toObject(includeInstance, f),
    seatingplanid: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.GetSeatingPlanByIdRequest}
 */
proto.auth.GetSeatingPlanByIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.GetSeatingPlanByIdRequest;
  return proto.auth.GetSeatingPlanByIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.GetSeatingPlanByIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.GetSeatingPlanByIdRequest}
 */
proto.auth.GetSeatingPlanByIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new auth_requests_pb.AuthorizedRequest;
      reader.readMessage(value,auth_requests_pb.AuthorizedRequest.deserializeBinaryFromReader);
      msg.setAuthorizedrequest(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSeatingplanid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.GetSeatingPlanByIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.GetSeatingPlanByIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.GetSeatingPlanByIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.GetSeatingPlanByIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorizedrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      auth_requests_pb.AuthorizedRequest.serializeBinaryToWriter
    );
  }
  f = message.getSeatingplanid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional AuthorizedRequest authorizedRequest = 1;
 * @return {?proto.auth.AuthorizedRequest}
 */
proto.auth.GetSeatingPlanByIdRequest.prototype.getAuthorizedrequest = function() {
  return /** @type{?proto.auth.AuthorizedRequest} */ (
    jspb.Message.getWrapperField(this, auth_requests_pb.AuthorizedRequest, 1));
};


/**
 * @param {?proto.auth.AuthorizedRequest|undefined} value
 * @return {!proto.auth.GetSeatingPlanByIdRequest} returns this
*/
proto.auth.GetSeatingPlanByIdRequest.prototype.setAuthorizedrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.GetSeatingPlanByIdRequest} returns this
 */
proto.auth.GetSeatingPlanByIdRequest.prototype.clearAuthorizedrequest = function() {
  return this.setAuthorizedrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.GetSeatingPlanByIdRequest.prototype.hasAuthorizedrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 seatingPlanId = 2;
 * @return {number}
 */
proto.auth.GetSeatingPlanByIdRequest.prototype.getSeatingplanid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.auth.GetSeatingPlanByIdRequest} returns this
 */
proto.auth.GetSeatingPlanByIdRequest.prototype.setSeatingplanid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.GetSeatingPlanListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.GetSeatingPlanListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.GetSeatingPlanListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.GetSeatingPlanListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authorizedrequest: (f = msg.getAuthorizedrequest()) && auth_requests_pb.AuthorizedRequest.toObject(includeInstance, f),
    venueid: (f = msg.getVenueid()) && struct_pb.NullableUInt64.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.GetSeatingPlanListRequest}
 */
proto.auth.GetSeatingPlanListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.GetSeatingPlanListRequest;
  return proto.auth.GetSeatingPlanListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.GetSeatingPlanListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.GetSeatingPlanListRequest}
 */
proto.auth.GetSeatingPlanListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new auth_requests_pb.AuthorizedRequest;
      reader.readMessage(value,auth_requests_pb.AuthorizedRequest.deserializeBinaryFromReader);
      msg.setAuthorizedrequest(value);
      break;
    case 2:
      var value = new struct_pb.NullableUInt64;
      reader.readMessage(value,struct_pb.NullableUInt64.deserializeBinaryFromReader);
      msg.setVenueid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.GetSeatingPlanListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.GetSeatingPlanListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.GetSeatingPlanListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.GetSeatingPlanListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthorizedrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      auth_requests_pb.AuthorizedRequest.serializeBinaryToWriter
    );
  }
  f = message.getVenueid();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      struct_pb.NullableUInt64.serializeBinaryToWriter
    );
  }
};


/**
 * optional AuthorizedRequest authorizedRequest = 1;
 * @return {?proto.auth.AuthorizedRequest}
 */
proto.auth.GetSeatingPlanListRequest.prototype.getAuthorizedrequest = function() {
  return /** @type{?proto.auth.AuthorizedRequest} */ (
    jspb.Message.getWrapperField(this, auth_requests_pb.AuthorizedRequest, 1));
};


/**
 * @param {?proto.auth.AuthorizedRequest|undefined} value
 * @return {!proto.auth.GetSeatingPlanListRequest} returns this
*/
proto.auth.GetSeatingPlanListRequest.prototype.setAuthorizedrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.GetSeatingPlanListRequest} returns this
 */
proto.auth.GetSeatingPlanListRequest.prototype.clearAuthorizedrequest = function() {
  return this.setAuthorizedrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.GetSeatingPlanListRequest.prototype.hasAuthorizedrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional NullableUInt64 venueId = 2;
 * @return {?proto.auth.NullableUInt64}
 */
proto.auth.GetSeatingPlanListRequest.prototype.getVenueid = function() {
  return /** @type{?proto.auth.NullableUInt64} */ (
    jspb.Message.getWrapperField(this, struct_pb.NullableUInt64, 2));
};


/**
 * @param {?proto.auth.NullableUInt64|undefined} value
 * @return {!proto.auth.GetSeatingPlanListRequest} returns this
*/
proto.auth.GetSeatingPlanListRequest.prototype.setVenueid = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.GetSeatingPlanListRequest} returns this
 */
proto.auth.GetSeatingPlanListRequest.prototype.clearVenueid = function() {
  return this.setVenueid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.GetSeatingPlanListRequest.prototype.hasVenueid = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.DeleteSeatingPlanRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.DeleteSeatingPlanRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.DeleteSeatingPlanRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.DeleteSeatingPlanRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    auth: (f = msg.getAuth()) && auth_requests_pb.AuthorizedRequest.toObject(includeInstance, f),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.DeleteSeatingPlanRequest}
 */
proto.auth.DeleteSeatingPlanRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.DeleteSeatingPlanRequest;
  return proto.auth.DeleteSeatingPlanRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.DeleteSeatingPlanRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.DeleteSeatingPlanRequest}
 */
proto.auth.DeleteSeatingPlanRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new auth_requests_pb.AuthorizedRequest;
      reader.readMessage(value,auth_requests_pb.AuthorizedRequest.deserializeBinaryFromReader);
      msg.setAuth(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.DeleteSeatingPlanRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.DeleteSeatingPlanRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.DeleteSeatingPlanRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.DeleteSeatingPlanRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuth();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      auth_requests_pb.AuthorizedRequest.serializeBinaryToWriter
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional AuthorizedRequest auth = 1;
 * @return {?proto.auth.AuthorizedRequest}
 */
proto.auth.DeleteSeatingPlanRequest.prototype.getAuth = function() {
  return /** @type{?proto.auth.AuthorizedRequest} */ (
    jspb.Message.getWrapperField(this, auth_requests_pb.AuthorizedRequest, 1));
};


/**
 * @param {?proto.auth.AuthorizedRequest|undefined} value
 * @return {!proto.auth.DeleteSeatingPlanRequest} returns this
*/
proto.auth.DeleteSeatingPlanRequest.prototype.setAuth = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.DeleteSeatingPlanRequest} returns this
 */
proto.auth.DeleteSeatingPlanRequest.prototype.clearAuth = function() {
  return this.setAuth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.DeleteSeatingPlanRequest.prototype.hasAuth = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 id = 2;
 * @return {number}
 */
proto.auth.DeleteSeatingPlanRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.auth.DeleteSeatingPlanRequest} returns this
 */
proto.auth.DeleteSeatingPlanRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.AddVenueRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.AddVenueRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.AddVenueRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.AddVenueRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    auth: (f = msg.getAuth()) && auth_requests_pb.AuthorizedRequest.toObject(includeInstance, f),
    cityid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    name: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.AddVenueRequest}
 */
proto.auth.AddVenueRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.AddVenueRequest;
  return proto.auth.AddVenueRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.AddVenueRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.AddVenueRequest}
 */
proto.auth.AddVenueRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new auth_requests_pb.AuthorizedRequest;
      reader.readMessage(value,auth_requests_pb.AuthorizedRequest.deserializeBinaryFromReader);
      msg.setAuth(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCityid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.AddVenueRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.AddVenueRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.AddVenueRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.AddVenueRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuth();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      auth_requests_pb.AuthorizedRequest.serializeBinaryToWriter
    );
  }
  f = message.getCityid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional AuthorizedRequest auth = 1;
 * @return {?proto.auth.AuthorizedRequest}
 */
proto.auth.AddVenueRequest.prototype.getAuth = function() {
  return /** @type{?proto.auth.AuthorizedRequest} */ (
    jspb.Message.getWrapperField(this, auth_requests_pb.AuthorizedRequest, 1));
};


/**
 * @param {?proto.auth.AuthorizedRequest|undefined} value
 * @return {!proto.auth.AddVenueRequest} returns this
*/
proto.auth.AddVenueRequest.prototype.setAuth = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.AddVenueRequest} returns this
 */
proto.auth.AddVenueRequest.prototype.clearAuth = function() {
  return this.setAuth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.AddVenueRequest.prototype.hasAuth = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 cityId = 2;
 * @return {number}
 */
proto.auth.AddVenueRequest.prototype.getCityid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.auth.AddVenueRequest} returns this
 */
proto.auth.AddVenueRequest.prototype.setCityid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.auth.AddVenueRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.auth.AddVenueRequest} returns this
 */
proto.auth.AddVenueRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.AddVenueResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.AddVenueResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.AddVenueResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.AddVenueResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    venue: (f = msg.getVenue()) && data_types_pb.Venue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.AddVenueResponse}
 */
proto.auth.AddVenueResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.AddVenueResponse;
  return proto.auth.AddVenueResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.AddVenueResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.AddVenueResponse}
 */
proto.auth.AddVenueResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new data_types_pb.Venue;
      reader.readMessage(value,data_types_pb.Venue.deserializeBinaryFromReader);
      msg.setVenue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.AddVenueResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.AddVenueResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.AddVenueResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.AddVenueResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVenue();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      data_types_pb.Venue.serializeBinaryToWriter
    );
  }
};


/**
 * optional Venue venue = 1;
 * @return {?proto.auth.Venue}
 */
proto.auth.AddVenueResponse.prototype.getVenue = function() {
  return /** @type{?proto.auth.Venue} */ (
    jspb.Message.getWrapperField(this, data_types_pb.Venue, 1));
};


/**
 * @param {?proto.auth.Venue|undefined} value
 * @return {!proto.auth.AddVenueResponse} returns this
*/
proto.auth.AddVenueResponse.prototype.setVenue = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.AddVenueResponse} returns this
 */
proto.auth.AddVenueResponse.prototype.clearVenue = function() {
  return this.setVenue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.AddVenueResponse.prototype.hasVenue = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.auth.NullableImage.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.auth.NullableImage.KindCase = {
  KIND_NOT_SET: 0,
  NULL: 1,
  IMAGE: 2
};

/**
 * @return {proto.auth.NullableImage.KindCase}
 */
proto.auth.NullableImage.prototype.getKindCase = function() {
  return /** @type {proto.auth.NullableImage.KindCase} */(jspb.Message.computeOneofCase(this, proto.auth.NullableImage.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.NullableImage.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.NullableImage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.NullableImage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.NullableImage.toObject = function(includeInstance, msg) {
  var f, obj = {
    pb_null: jspb.Message.getFieldWithDefault(msg, 1, 0),
    image: (f = msg.getImage()) && data_types_pb.Image.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.NullableImage}
 */
proto.auth.NullableImage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.NullableImage;
  return proto.auth.NullableImage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.NullableImage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.NullableImage}
 */
proto.auth.NullableImage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.google.protobuf.NullValue} */ (reader.readEnum());
      msg.setNull(value);
      break;
    case 2:
      var value = new data_types_pb.Image;
      reader.readMessage(value,data_types_pb.Image.deserializeBinaryFromReader);
      msg.setImage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.NullableImage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.NullableImage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.NullableImage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.NullableImage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.google.protobuf.NullValue} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getImage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      data_types_pb.Image.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.NullValue null = 1;
 * @return {!proto.google.protobuf.NullValue}
 */
proto.auth.NullableImage.prototype.getNull = function() {
  return /** @type {!proto.google.protobuf.NullValue} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.google.protobuf.NullValue} value
 * @return {!proto.auth.NullableImage} returns this
 */
proto.auth.NullableImage.prototype.setNull = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.auth.NullableImage.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.auth.NullableImage} returns this
 */
proto.auth.NullableImage.prototype.clearNull = function() {
  return jspb.Message.setOneofField(this, 1, proto.auth.NullableImage.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.NullableImage.prototype.hasNull = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Image image = 2;
 * @return {?proto.auth.Image}
 */
proto.auth.NullableImage.prototype.getImage = function() {
  return /** @type{?proto.auth.Image} */ (
    jspb.Message.getWrapperField(this, data_types_pb.Image, 2));
};


/**
 * @param {?proto.auth.Image|undefined} value
 * @return {!proto.auth.NullableImage} returns this
*/
proto.auth.NullableImage.prototype.setImage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.auth.NullableImage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.NullableImage} returns this
 */
proto.auth.NullableImage.prototype.clearImage = function() {
  return this.setImage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.NullableImage.prototype.hasImage = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.SaveVenueRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.SaveVenueRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.SaveVenueRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.SaveVenueRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    auth: (f = msg.getAuth()) && auth_requests_pb.AuthorizedRequest.toObject(includeInstance, f),
    simplevenue: (f = msg.getSimplevenue()) && data_types_pb.SimpleVenue.toObject(includeInstance, f),
    bigimage: (f = msg.getBigimage()) && data_types_pb.Image.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.SaveVenueRequest}
 */
proto.auth.SaveVenueRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.SaveVenueRequest;
  return proto.auth.SaveVenueRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.SaveVenueRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.SaveVenueRequest}
 */
proto.auth.SaveVenueRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new auth_requests_pb.AuthorizedRequest;
      reader.readMessage(value,auth_requests_pb.AuthorizedRequest.deserializeBinaryFromReader);
      msg.setAuth(value);
      break;
    case 2:
      var value = new data_types_pb.SimpleVenue;
      reader.readMessage(value,data_types_pb.SimpleVenue.deserializeBinaryFromReader);
      msg.setSimplevenue(value);
      break;
    case 3:
      var value = new data_types_pb.Image;
      reader.readMessage(value,data_types_pb.Image.deserializeBinaryFromReader);
      msg.setBigimage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.SaveVenueRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.SaveVenueRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.SaveVenueRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.SaveVenueRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuth();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      auth_requests_pb.AuthorizedRequest.serializeBinaryToWriter
    );
  }
  f = message.getSimplevenue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      data_types_pb.SimpleVenue.serializeBinaryToWriter
    );
  }
  f = message.getBigimage();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      data_types_pb.Image.serializeBinaryToWriter
    );
  }
};


/**
 * optional AuthorizedRequest auth = 1;
 * @return {?proto.auth.AuthorizedRequest}
 */
proto.auth.SaveVenueRequest.prototype.getAuth = function() {
  return /** @type{?proto.auth.AuthorizedRequest} */ (
    jspb.Message.getWrapperField(this, auth_requests_pb.AuthorizedRequest, 1));
};


/**
 * @param {?proto.auth.AuthorizedRequest|undefined} value
 * @return {!proto.auth.SaveVenueRequest} returns this
*/
proto.auth.SaveVenueRequest.prototype.setAuth = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.SaveVenueRequest} returns this
 */
proto.auth.SaveVenueRequest.prototype.clearAuth = function() {
  return this.setAuth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.SaveVenueRequest.prototype.hasAuth = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional SimpleVenue simpleVenue = 2;
 * @return {?proto.auth.SimpleVenue}
 */
proto.auth.SaveVenueRequest.prototype.getSimplevenue = function() {
  return /** @type{?proto.auth.SimpleVenue} */ (
    jspb.Message.getWrapperField(this, data_types_pb.SimpleVenue, 2));
};


/**
 * @param {?proto.auth.SimpleVenue|undefined} value
 * @return {!proto.auth.SaveVenueRequest} returns this
*/
proto.auth.SaveVenueRequest.prototype.setSimplevenue = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.SaveVenueRequest} returns this
 */
proto.auth.SaveVenueRequest.prototype.clearSimplevenue = function() {
  return this.setSimplevenue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.SaveVenueRequest.prototype.hasSimplevenue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Image bigImage = 3;
 * @return {?proto.auth.Image}
 */
proto.auth.SaveVenueRequest.prototype.getBigimage = function() {
  return /** @type{?proto.auth.Image} */ (
    jspb.Message.getWrapperField(this, data_types_pb.Image, 3));
};


/**
 * @param {?proto.auth.Image|undefined} value
 * @return {!proto.auth.SaveVenueRequest} returns this
*/
proto.auth.SaveVenueRequest.prototype.setBigimage = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.SaveVenueRequest} returns this
 */
proto.auth.SaveVenueRequest.prototype.clearBigimage = function() {
  return this.setBigimage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.SaveVenueRequest.prototype.hasBigimage = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.SaveVenueResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.SaveVenueResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.SaveVenueResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.SaveVenueResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    venue: (f = msg.getVenue()) && data_types_pb.Venue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.SaveVenueResponse}
 */
proto.auth.SaveVenueResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.SaveVenueResponse;
  return proto.auth.SaveVenueResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.SaveVenueResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.SaveVenueResponse}
 */
proto.auth.SaveVenueResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new data_types_pb.Venue;
      reader.readMessage(value,data_types_pb.Venue.deserializeBinaryFromReader);
      msg.setVenue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.SaveVenueResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.SaveVenueResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.SaveVenueResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.SaveVenueResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVenue();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      data_types_pb.Venue.serializeBinaryToWriter
    );
  }
};


/**
 * optional Venue venue = 1;
 * @return {?proto.auth.Venue}
 */
proto.auth.SaveVenueResponse.prototype.getVenue = function() {
  return /** @type{?proto.auth.Venue} */ (
    jspb.Message.getWrapperField(this, data_types_pb.Venue, 1));
};


/**
 * @param {?proto.auth.Venue|undefined} value
 * @return {!proto.auth.SaveVenueResponse} returns this
*/
proto.auth.SaveVenueResponse.prototype.setVenue = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.SaveVenueResponse} returns this
 */
proto.auth.SaveVenueResponse.prototype.clearVenue = function() {
  return this.setVenue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.SaveVenueResponse.prototype.hasVenue = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.ActionEventSyncRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.ActionEventSyncRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.ActionEventSyncRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.ActionEventSyncRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    auth: (f = msg.getAuth()) && auth_requests_pb.AuthorizedRequest.toObject(includeInstance, f),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.ActionEventSyncRequest}
 */
proto.auth.ActionEventSyncRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.ActionEventSyncRequest;
  return proto.auth.ActionEventSyncRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.ActionEventSyncRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.ActionEventSyncRequest}
 */
proto.auth.ActionEventSyncRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new auth_requests_pb.AuthorizedRequest;
      reader.readMessage(value,auth_requests_pb.AuthorizedRequest.deserializeBinaryFromReader);
      msg.setAuth(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.ActionEventSyncRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.ActionEventSyncRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.ActionEventSyncRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.ActionEventSyncRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuth();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      auth_requests_pb.AuthorizedRequest.serializeBinaryToWriter
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional AuthorizedRequest auth = 1;
 * @return {?proto.auth.AuthorizedRequest}
 */
proto.auth.ActionEventSyncRequest.prototype.getAuth = function() {
  return /** @type{?proto.auth.AuthorizedRequest} */ (
    jspb.Message.getWrapperField(this, auth_requests_pb.AuthorizedRequest, 1));
};


/**
 * @param {?proto.auth.AuthorizedRequest|undefined} value
 * @return {!proto.auth.ActionEventSyncRequest} returns this
*/
proto.auth.ActionEventSyncRequest.prototype.setAuth = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.ActionEventSyncRequest} returns this
 */
proto.auth.ActionEventSyncRequest.prototype.clearAuth = function() {
  return this.setAuth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.ActionEventSyncRequest.prototype.hasAuth = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 id = 2;
 * @return {number}
 */
proto.auth.ActionEventSyncRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.auth.ActionEventSyncRequest} returns this
 */
proto.auth.ActionEventSyncRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.ActionEventSyncResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.ActionEventSyncResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.ActionEventSyncResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.ActionEventSyncResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    actioneventdata: (f = msg.getActioneventdata()) && data_types_pb.ActionEventData.toObject(includeInstance, f),
    pricechanged: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    report: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.ActionEventSyncResponse}
 */
proto.auth.ActionEventSyncResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.ActionEventSyncResponse;
  return proto.auth.ActionEventSyncResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.ActionEventSyncResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.ActionEventSyncResponse}
 */
proto.auth.ActionEventSyncResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new data_types_pb.ActionEventData;
      reader.readMessage(value,data_types_pb.ActionEventData.deserializeBinaryFromReader);
      msg.setActioneventdata(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPricechanged(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReport(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.ActionEventSyncResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.ActionEventSyncResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.ActionEventSyncResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.ActionEventSyncResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActioneventdata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      data_types_pb.ActionEventData.serializeBinaryToWriter
    );
  }
  f = message.getPricechanged();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getReport();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional ActionEventData actionEventData = 1;
 * @return {?proto.auth.ActionEventData}
 */
proto.auth.ActionEventSyncResponse.prototype.getActioneventdata = function() {
  return /** @type{?proto.auth.ActionEventData} */ (
    jspb.Message.getWrapperField(this, data_types_pb.ActionEventData, 1));
};


/**
 * @param {?proto.auth.ActionEventData|undefined} value
 * @return {!proto.auth.ActionEventSyncResponse} returns this
*/
proto.auth.ActionEventSyncResponse.prototype.setActioneventdata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.ActionEventSyncResponse} returns this
 */
proto.auth.ActionEventSyncResponse.prototype.clearActioneventdata = function() {
  return this.setActioneventdata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.ActionEventSyncResponse.prototype.hasActioneventdata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool priceChanged = 2;
 * @return {boolean}
 */
proto.auth.ActionEventSyncResponse.prototype.getPricechanged = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.auth.ActionEventSyncResponse} returns this
 */
proto.auth.ActionEventSyncResponse.prototype.setPricechanged = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string report = 3;
 * @return {string}
 */
proto.auth.ActionEventSyncResponse.prototype.getReport = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.auth.ActionEventSyncResponse} returns this
 */
proto.auth.ActionEventSyncResponse.prototype.setReport = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.GetSyncReportRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.GetSyncReportRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.GetSyncReportRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.GetSyncReportRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    auth: (f = msg.getAuth()) && auth_requests_pb.AuthorizedRequest.toObject(includeInstance, f),
    actionid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    planid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    gatewayevent: (f = msg.getGatewayevent()) && data_types_pb.GatewayEvent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.GetSyncReportRequest}
 */
proto.auth.GetSyncReportRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.GetSyncReportRequest;
  return proto.auth.GetSyncReportRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.GetSyncReportRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.GetSyncReportRequest}
 */
proto.auth.GetSyncReportRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new auth_requests_pb.AuthorizedRequest;
      reader.readMessage(value,auth_requests_pb.AuthorizedRequest.deserializeBinaryFromReader);
      msg.setAuth(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setActionid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPlanid(value);
      break;
    case 4:
      var value = new data_types_pb.GatewayEvent;
      reader.readMessage(value,data_types_pb.GatewayEvent.deserializeBinaryFromReader);
      msg.setGatewayevent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.GetSyncReportRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.GetSyncReportRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.GetSyncReportRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.GetSyncReportRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuth();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      auth_requests_pb.AuthorizedRequest.serializeBinaryToWriter
    );
  }
  f = message.getActionid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getPlanid();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getGatewayevent();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      data_types_pb.GatewayEvent.serializeBinaryToWriter
    );
  }
};


/**
 * optional AuthorizedRequest auth = 1;
 * @return {?proto.auth.AuthorizedRequest}
 */
proto.auth.GetSyncReportRequest.prototype.getAuth = function() {
  return /** @type{?proto.auth.AuthorizedRequest} */ (
    jspb.Message.getWrapperField(this, auth_requests_pb.AuthorizedRequest, 1));
};


/**
 * @param {?proto.auth.AuthorizedRequest|undefined} value
 * @return {!proto.auth.GetSyncReportRequest} returns this
*/
proto.auth.GetSyncReportRequest.prototype.setAuth = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.GetSyncReportRequest} returns this
 */
proto.auth.GetSyncReportRequest.prototype.clearAuth = function() {
  return this.setAuth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.GetSyncReportRequest.prototype.hasAuth = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 actionId = 2;
 * @return {number}
 */
proto.auth.GetSyncReportRequest.prototype.getActionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.auth.GetSyncReportRequest} returns this
 */
proto.auth.GetSyncReportRequest.prototype.setActionid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 planId = 3;
 * @return {number}
 */
proto.auth.GetSyncReportRequest.prototype.getPlanid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.auth.GetSyncReportRequest} returns this
 */
proto.auth.GetSyncReportRequest.prototype.setPlanid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional GatewayEvent gatewayEvent = 4;
 * @return {?proto.auth.GatewayEvent}
 */
proto.auth.GetSyncReportRequest.prototype.getGatewayevent = function() {
  return /** @type{?proto.auth.GatewayEvent} */ (
    jspb.Message.getWrapperField(this, data_types_pb.GatewayEvent, 4));
};


/**
 * @param {?proto.auth.GatewayEvent|undefined} value
 * @return {!proto.auth.GetSyncReportRequest} returns this
*/
proto.auth.GetSyncReportRequest.prototype.setGatewayevent = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.GetSyncReportRequest} returns this
 */
proto.auth.GetSyncReportRequest.prototype.clearGatewayevent = function() {
  return this.setGatewayevent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.GetSyncReportRequest.prototype.hasGatewayevent = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.GetSyncReportResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.GetSyncReportResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.GetSyncReportResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.GetSyncReportResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.GetSyncReportResponse}
 */
proto.auth.GetSyncReportResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.GetSyncReportResponse;
  return proto.auth.GetSyncReportResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.GetSyncReportResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.GetSyncReportResponse}
 */
proto.auth.GetSyncReportResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.GetSyncReportResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.GetSyncReportResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.GetSyncReportResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.GetSyncReportResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.auth.GetSyncReportResponse.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.auth.GetSyncReportResponse} returns this
 */
proto.auth.GetSyncReportResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.GetGatewayEventInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.GetGatewayEventInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.GetGatewayEventInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.GetGatewayEventInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    auth: (f = msg.getAuth()) && auth_requests_pb.AuthorizedRequest.toObject(includeInstance, f),
    gatewayevent: (f = msg.getGatewayevent()) && data_types_pb.GatewayEvent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.GetGatewayEventInfoRequest}
 */
proto.auth.GetGatewayEventInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.GetGatewayEventInfoRequest;
  return proto.auth.GetGatewayEventInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.GetGatewayEventInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.GetGatewayEventInfoRequest}
 */
proto.auth.GetGatewayEventInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new auth_requests_pb.AuthorizedRequest;
      reader.readMessage(value,auth_requests_pb.AuthorizedRequest.deserializeBinaryFromReader);
      msg.setAuth(value);
      break;
    case 2:
      var value = new data_types_pb.GatewayEvent;
      reader.readMessage(value,data_types_pb.GatewayEvent.deserializeBinaryFromReader);
      msg.setGatewayevent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.GetGatewayEventInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.GetGatewayEventInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.GetGatewayEventInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.GetGatewayEventInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuth();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      auth_requests_pb.AuthorizedRequest.serializeBinaryToWriter
    );
  }
  f = message.getGatewayevent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      data_types_pb.GatewayEvent.serializeBinaryToWriter
    );
  }
};


/**
 * optional AuthorizedRequest auth = 1;
 * @return {?proto.auth.AuthorizedRequest}
 */
proto.auth.GetGatewayEventInfoRequest.prototype.getAuth = function() {
  return /** @type{?proto.auth.AuthorizedRequest} */ (
    jspb.Message.getWrapperField(this, auth_requests_pb.AuthorizedRequest, 1));
};


/**
 * @param {?proto.auth.AuthorizedRequest|undefined} value
 * @return {!proto.auth.GetGatewayEventInfoRequest} returns this
*/
proto.auth.GetGatewayEventInfoRequest.prototype.setAuth = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.GetGatewayEventInfoRequest} returns this
 */
proto.auth.GetGatewayEventInfoRequest.prototype.clearAuth = function() {
  return this.setAuth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.GetGatewayEventInfoRequest.prototype.hasAuth = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional GatewayEvent gatewayEvent = 2;
 * @return {?proto.auth.GatewayEvent}
 */
proto.auth.GetGatewayEventInfoRequest.prototype.getGatewayevent = function() {
  return /** @type{?proto.auth.GatewayEvent} */ (
    jspb.Message.getWrapperField(this, data_types_pb.GatewayEvent, 2));
};


/**
 * @param {?proto.auth.GatewayEvent|undefined} value
 * @return {!proto.auth.GetGatewayEventInfoRequest} returns this
*/
proto.auth.GetGatewayEventInfoRequest.prototype.setGatewayevent = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.GetGatewayEventInfoRequest} returns this
 */
proto.auth.GetGatewayEventInfoRequest.prototype.clearGatewayevent = function() {
  return this.setGatewayevent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.GetGatewayEventInfoRequest.prototype.hasGatewayevent = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.GetGatewayEventInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.GetGatewayEventInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.GetGatewayEventInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.GetGatewayEventInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    report: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.GetGatewayEventInfoResponse}
 */
proto.auth.GetGatewayEventInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.GetGatewayEventInfoResponse;
  return proto.auth.GetGatewayEventInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.GetGatewayEventInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.GetGatewayEventInfoResponse}
 */
proto.auth.GetGatewayEventInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setReport(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.GetGatewayEventInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.GetGatewayEventInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.GetGatewayEventInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.GetGatewayEventInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReport();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string report = 1;
 * @return {string}
 */
proto.auth.GetGatewayEventInfoResponse.prototype.getReport = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.auth.GetGatewayEventInfoResponse} returns this
 */
proto.auth.GetGatewayEventInfoResponse.prototype.setReport = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.SetActionBookletRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.SetActionBookletRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.SetActionBookletRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.SetActionBookletRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    auth: (f = msg.getAuth()) && auth_requests_pb.AuthorizedRequest.toObject(includeInstance, f),
    actionid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    type: (f = msg.getType()) && data_types_pb.BookletType.toObject(includeInstance, f),
    data: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.SetActionBookletRequest}
 */
proto.auth.SetActionBookletRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.SetActionBookletRequest;
  return proto.auth.SetActionBookletRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.SetActionBookletRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.SetActionBookletRequest}
 */
proto.auth.SetActionBookletRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new auth_requests_pb.AuthorizedRequest;
      reader.readMessage(value,auth_requests_pb.AuthorizedRequest.deserializeBinaryFromReader);
      msg.setAuth(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setActionid(value);
      break;
    case 3:
      var value = new data_types_pb.BookletType;
      reader.readMessage(value,data_types_pb.BookletType.deserializeBinaryFromReader);
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.SetActionBookletRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.SetActionBookletRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.SetActionBookletRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.SetActionBookletRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuth();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      auth_requests_pb.AuthorizedRequest.serializeBinaryToWriter
    );
  }
  f = message.getActionid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getType();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      data_types_pb.BookletType.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional AuthorizedRequest auth = 1;
 * @return {?proto.auth.AuthorizedRequest}
 */
proto.auth.SetActionBookletRequest.prototype.getAuth = function() {
  return /** @type{?proto.auth.AuthorizedRequest} */ (
    jspb.Message.getWrapperField(this, auth_requests_pb.AuthorizedRequest, 1));
};


/**
 * @param {?proto.auth.AuthorizedRequest|undefined} value
 * @return {!proto.auth.SetActionBookletRequest} returns this
*/
proto.auth.SetActionBookletRequest.prototype.setAuth = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.SetActionBookletRequest} returns this
 */
proto.auth.SetActionBookletRequest.prototype.clearAuth = function() {
  return this.setAuth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.SetActionBookletRequest.prototype.hasAuth = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 actionId = 2;
 * @return {number}
 */
proto.auth.SetActionBookletRequest.prototype.getActionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.auth.SetActionBookletRequest} returns this
 */
proto.auth.SetActionBookletRequest.prototype.setActionid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional BookletType type = 3;
 * @return {?proto.auth.BookletType}
 */
proto.auth.SetActionBookletRequest.prototype.getType = function() {
  return /** @type{?proto.auth.BookletType} */ (
    jspb.Message.getWrapperField(this, data_types_pb.BookletType, 3));
};


/**
 * @param {?proto.auth.BookletType|undefined} value
 * @return {!proto.auth.SetActionBookletRequest} returns this
*/
proto.auth.SetActionBookletRequest.prototype.setType = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.auth.SetActionBookletRequest} returns this
 */
proto.auth.SetActionBookletRequest.prototype.clearType = function() {
  return this.setType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.auth.SetActionBookletRequest.prototype.hasType = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string data = 4;
 * @return {string}
 */
proto.auth.SetActionBookletRequest.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.auth.SetActionBookletRequest} returns this
 */
proto.auth.SetActionBookletRequest.prototype.setData = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.auth.SetActionBookletResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.auth.SetActionBookletResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.auth.SetActionBookletResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.SetActionBookletResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.auth.SetActionBookletResponse}
 */
proto.auth.SetActionBookletResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.auth.SetActionBookletResponse;
  return proto.auth.SetActionBookletResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.auth.SetActionBookletResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.auth.SetActionBookletResponse}
 */
proto.auth.SetActionBookletResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.auth.SetActionBookletResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.auth.SetActionBookletResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.auth.SetActionBookletResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.auth.SetActionBookletResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.auth.SetActionBookletResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.auth.SetActionBookletResponse} returns this
 */
proto.auth.SetActionBookletResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.auth.VenuesOrder = {
  NAMEASC: 0,
  NAMEDESC: 1,
  SIZEASC: 2,
  SIZEDESC: 3
};

goog.object.extend(exports, proto.auth);
